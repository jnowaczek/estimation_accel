

================================================================
== Vitis HLS Report for 'count_appearances_Pipeline_APPEARANCES'
================================================================
* Date:           Sun May 29 12:57:24 2022

* Version:        2022.1 (Build 3526262 on Mon Apr 18 15:48:16 MDT 2022)
* Project:        estimation_mvp
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z010i-clg225-1L


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     1028|     1028|  10.280 us|  10.280 us|  1028|  1028|       no|
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |               |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |- APPEARANCES  |     1026|     1026|         4|          1|          1|  1024|       yes|
        +---------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 1
  Pipeline-0 : II = 1, D = 4, States = { 1 2 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.46>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%prev_1 = alloca i32 1"   --->   Operation 7 'alloca' 'prev_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 8 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%count = alloca i32 1"   --->   Operation 9 'alloca' 'count' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %gmem, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_2, void @empty_0, i32 16, i32 16, i32 16, i32 16, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%input_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %input_r"   --->   Operation 11 'read' 'input_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%prev_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %prev"   --->   Operation 12 'read' 'prev_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (1.70ns)   --->   "%store_ln0 = store i32 0, i32 %count"   --->   Operation 13 'store' 'store_ln0' <Predicate = true> <Delay = 1.70>
ST_1 : Operation 14 [1/1] (1.58ns)   --->   "%store_ln0 = store i11 0, i11 %i"   --->   Operation 14 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 15 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 %prev_read, i8 %prev_1"   --->   Operation 15 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body6"   --->   Operation 16 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%i_1 = load i11 %i" [byte_count_mvp.cpp:28]   --->   Operation 17 'load' 'i_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.88ns)   --->   "%icmp_ln28 = icmp_eq  i11 %i_1, i11 1024" [byte_count_mvp.cpp:28]   --->   Operation 18 'icmp' 'icmp_ln28' <Predicate = true> <Delay = 1.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (1.63ns)   --->   "%add_ln28 = add i11 %i_1, i11 1" [byte_count_mvp.cpp:28]   --->   Operation 19 'add' 'add_ln28' <Predicate = true> <Delay = 1.63> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%br_ln28 = br i1 %icmp_ln28, void %for.body6.split, void %for.end18.exitStub" [byte_count_mvp.cpp:28]   --->   Operation 20 'br' 'br_ln28' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (1.58ns)   --->   "%store_ln28 = store i11 %add_ln28, i11 %i" [byte_count_mvp.cpp:28]   --->   Operation 21 'store' 'store_ln28' <Predicate = (!icmp_ln28)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i8 %gmem, i32 %input_read" [byte_count_mvp.cpp:26]   --->   Operation 22 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 1024, i64 1024, i64 1024"   --->   Operation 23 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (7.30ns)   --->   "%prev_2 = read i8 @_ssdm_op_Read.m_axi.p1i8, i8 %gmem_addr" [byte_count_mvp.cpp:30]   --->   Operation 24 'read' 'prev_2' <Predicate = (!icmp_ln28)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 4.80>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%prev_1_load_1 = load i8 %prev_1" [byte_count_mvp.cpp:32]   --->   Operation 25 'load' 'prev_1_load_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%specpipeline_ln29 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_0" [byte_count_mvp.cpp:29]   --->   Operation 26 'specpipeline' 'specpipeline_ln29' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%specloopname_ln25 = specloopname void @_ssdm_op_SpecLoopName, void @empty_10" [byte_count_mvp.cpp:25]   --->   Operation 27 'specloopname' 'specloopname_ln25' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (1.55ns)   --->   "%icmp_ln32 = icmp_eq  i8 %prev_2, i8 %prev_1_load_1" [byte_count_mvp.cpp:32]   --->   Operation 28 'icmp' 'icmp_ln32' <Predicate = true> <Delay = 1.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.55> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln32 = br i1 %icmp_ln32, void %if.else, void %for.inc16" [byte_count_mvp.cpp:32]   --->   Operation 29 'br' 'br_ln32' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%count_load_1 = load i32 %count" [byte_count_mvp.cpp:35]   --->   Operation 30 'load' 'count_load_1' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln35 = zext i8 %prev_1_load_1" [byte_count_mvp.cpp:35]   --->   Operation 31 'zext' 'zext_ln35' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%appearances_addr = getelementptr i32 %appearances, i32 0, i32 %zext_ln35" [byte_count_mvp.cpp:35]   --->   Operation 32 'getelementptr' 'appearances_addr' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (3.25ns)   --->   "%store_ln35 = store i32 %count_load_1, i8 %appearances_addr" [byte_count_mvp.cpp:35]   --->   Operation 33 'store' 'store_ln35' <Predicate = (!icmp_ln32)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%zext_ln36 = zext i8 %prev_2" [byte_count_mvp.cpp:36]   --->   Operation 34 'zext' 'zext_ln36' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%appearances_addr_256 = getelementptr i32 %appearances, i32 0, i32 %zext_ln36" [byte_count_mvp.cpp:36]   --->   Operation 35 'getelementptr' 'appearances_addr_256' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_3 : Operation 36 [2/2] (3.25ns)   --->   "%appearances_load = load i8 %appearances_addr_256" [byte_count_mvp.cpp:36]   --->   Operation 36 'load' 'appearances_load' <Predicate = (!icmp_ln32)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_3 : Operation 37 [1/1] (1.58ns)   --->   "%store_ln28 = store i8 %prev_2, i8 %prev_1" [byte_count_mvp.cpp:28]   --->   Operation 37 'store' 'store_ln28' <Predicate = true> <Delay = 1.58>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%prev_1_load = load i8 %prev_1"   --->   Operation 45 'load' 'prev_1_load' <Predicate = (icmp_ln28)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%count_load = load i32 %count"   --->   Operation 46 'load' 'count_load' <Predicate = (icmp_ln28)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i8P0A, i8 %prev_1_out, i8 %prev_1_load"   --->   Operation 47 'write' 'write_ln0' <Predicate = (icmp_ln28)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %count_out, i32 %count_load"   --->   Operation 48 'write' 'write_ln0' <Predicate = (icmp_ln28)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 49 'ret' 'ret_ln0' <Predicate = (icmp_ln28)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 4.96>
ST_4 : Operation 38 [1/2] (3.25ns)   --->   "%appearances_load = load i8 %appearances_addr_256" [byte_count_mvp.cpp:36]   --->   Operation 38 'load' 'appearances_load' <Predicate = (!icmp_ln32)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 256> <RAM>
ST_4 : Operation 39 [1/1] (1.70ns)   --->   "%store_ln36 = store i32 %appearances_load, i32 %count" [byte_count_mvp.cpp:36]   --->   Operation 39 'store' 'store_ln36' <Predicate = (!icmp_ln32)> <Delay = 1.70>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc16"   --->   Operation 40 'br' 'br_ln0' <Predicate = (!icmp_ln32)> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%count_load_2 = load i32 %count" [byte_count_mvp.cpp:25]   --->   Operation 41 'load' 'count_load_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (2.55ns)   --->   "%count_1 = add i32 %count_load_2, i32 1" [byte_count_mvp.cpp:25]   --->   Operation 42 'add' 'count_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 43 [1/1] (1.70ns)   --->   "%store_ln28 = store i32 %count_1, i32 %count" [byte_count_mvp.cpp:28]   --->   Operation 43 'store' 'store_ln28' <Predicate = true> <Delay = 1.70>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln28 = br void %for.body6" [byte_count_mvp.cpp:28]   --->   Operation 44 'br' 'br_ln28' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.47ns
The critical path consists of the following:
	'alloca' operation ('i') [8]  (0 ns)
	'load' operation ('i', byte_count_mvp.cpp:28) on local variable 'i' [18]  (0 ns)
	'add' operation ('add_ln28', byte_count_mvp.cpp:28) [22]  (1.64 ns)
	'store' operation ('store_ln28', byte_count_mvp.cpp:28) of variable 'add_ln28', byte_count_mvp.cpp:28 on local variable 'i' [45]  (1.59 ns)
	blocking operation 0.241 ns on control path)

 <State 2>: 7.3ns
The critical path consists of the following:
	'getelementptr' operation ('gmem_addr', byte_count_mvp.cpp:26) [19]  (0 ns)
	bus read operation ('byte', byte_count_mvp.cpp:30) on port 'gmem' (byte_count_mvp.cpp:30) [28]  (7.3 ns)

 <State 3>: 4.8ns
The critical path consists of the following:
	'load' operation ('prev_1_load_1', byte_count_mvp.cpp:32) on local variable 'prev' [25]  (0 ns)
	'getelementptr' operation ('appearances_addr', byte_count_mvp.cpp:35) [34]  (0 ns)
	'store' operation ('store_ln35', byte_count_mvp.cpp:35) of variable 'count_load_1', byte_count_mvp.cpp:35 on array 'appearances' [35]  (3.25 ns)
	blocking operation 1.55 ns on control path)

 <State 4>: 4.96ns
The critical path consists of the following:
	'load' operation ('appearances_load', byte_count_mvp.cpp:36) on array 'appearances' [38]  (3.25 ns)
	'store' operation ('store_ln36', byte_count_mvp.cpp:36) of variable 'appearances_load', byte_count_mvp.cpp:36 on local variable 'count' [39]  (1.71 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
