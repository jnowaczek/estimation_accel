// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="make_go_fast_make_go_fast,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=3.650000,HLS_SYN_LAT=75,HLS_SYN_TPT=76,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=2262,HLS_SYN_LUT=2642,HLS_VERSION=2023_1}" *)

module make_go_fast (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (32 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;

 reg    ap_rst_n_inv;
wire   [63:0] in_r;
wire   [63:0] out_r;
wire    gmem_AWREADY;
wire    gmem_WREADY;
wire    gmem_ARREADY;
wire    gmem_RVALID;
wire   [7:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [12:0] gmem_RFIFONUM;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
wire    gmem0_AWREADY;
wire    gmem0_WREADY;
wire    gmem0_ARREADY;
wire    gmem0_RVALID;
wire   [7:0] gmem0_RDATA;
wire   [10:0] gmem0_RFIFONUM;
wire    gmem0_BVALID;
wire   [1:0] gmem0_BRESP;
wire   [0:0] gmem0_BID;
wire   [0:0] gmem0_BUSER;
wire    read_in_U0_ap_start;
wire    read_in_U0_ap_done;
wire    read_in_U0_ap_continue;
wire    read_in_U0_ap_idle;
wire    read_in_U0_ap_ready;
wire    read_in_U0_m_axi_gmem_AWVALID;
wire   [63:0] read_in_U0_m_axi_gmem_AWADDR;
wire   [0:0] read_in_U0_m_axi_gmem_AWID;
wire   [31:0] read_in_U0_m_axi_gmem_AWLEN;
wire   [2:0] read_in_U0_m_axi_gmem_AWSIZE;
wire   [1:0] read_in_U0_m_axi_gmem_AWBURST;
wire   [1:0] read_in_U0_m_axi_gmem_AWLOCK;
wire   [3:0] read_in_U0_m_axi_gmem_AWCACHE;
wire   [2:0] read_in_U0_m_axi_gmem_AWPROT;
wire   [3:0] read_in_U0_m_axi_gmem_AWQOS;
wire   [3:0] read_in_U0_m_axi_gmem_AWREGION;
wire   [0:0] read_in_U0_m_axi_gmem_AWUSER;
wire    read_in_U0_m_axi_gmem_WVALID;
wire   [7:0] read_in_U0_m_axi_gmem_WDATA;
wire   [0:0] read_in_U0_m_axi_gmem_WSTRB;
wire    read_in_U0_m_axi_gmem_WLAST;
wire   [0:0] read_in_U0_m_axi_gmem_WID;
wire   [0:0] read_in_U0_m_axi_gmem_WUSER;
wire    read_in_U0_m_axi_gmem_ARVALID;
wire   [63:0] read_in_U0_m_axi_gmem_ARADDR;
wire   [0:0] read_in_U0_m_axi_gmem_ARID;
wire   [31:0] read_in_U0_m_axi_gmem_ARLEN;
wire   [2:0] read_in_U0_m_axi_gmem_ARSIZE;
wire   [1:0] read_in_U0_m_axi_gmem_ARBURST;
wire   [1:0] read_in_U0_m_axi_gmem_ARLOCK;
wire   [3:0] read_in_U0_m_axi_gmem_ARCACHE;
wire   [2:0] read_in_U0_m_axi_gmem_ARPROT;
wire   [3:0] read_in_U0_m_axi_gmem_ARQOS;
wire   [3:0] read_in_U0_m_axi_gmem_ARREGION;
wire   [0:0] read_in_U0_m_axi_gmem_ARUSER;
wire    read_in_U0_m_axi_gmem_RREADY;
wire    read_in_U0_m_axi_gmem_BREADY;
wire   [7:0] read_in_U0_split_in_din;
wire    read_in_U0_split_in_write;
wire    KPN_U0_split_out_0_read;
wire   [7:0] KPN_U0_merge_in_0_din;
wire    KPN_U0_merge_in_0_write;
wire    KPN_U0_split_out_1_read;
wire   [7:0] KPN_U0_merge_in_1_din;
wire    KPN_U0_merge_in_1_write;
wire    KPN_U0_split_out_2_read;
wire   [7:0] KPN_U0_merge_in_2_din;
wire    KPN_U0_merge_in_2_write;
wire    KPN_U0_split_out_3_read;
wire   [7:0] KPN_U0_merge_in_3_din;
wire    KPN_U0_merge_in_3_write;
wire    KPN_U0_split_out_4_read;
wire   [7:0] KPN_U0_merge_in_4_din;
wire    KPN_U0_merge_in_4_write;
wire    KPN_U0_split_out_5_read;
wire   [7:0] KPN_U0_merge_in_5_din;
wire    KPN_U0_merge_in_5_write;
wire    KPN_U0_split_out_6_read;
wire   [7:0] KPN_U0_merge_in_6_din;
wire    KPN_U0_merge_in_6_write;
wire    KPN_U0_split_out_7_read;
wire   [7:0] KPN_U0_merge_in_7_din;
wire    KPN_U0_merge_in_7_write;
wire    KPN_U0_ap_ready;
wire    write_out_U0_ap_start;
wire    write_out_U0_ap_done;
wire    write_out_U0_ap_continue;
wire    write_out_U0_ap_idle;
wire    write_out_U0_ap_ready;
wire    write_out_U0_m_axi_gmem0_AWVALID;
wire   [63:0] write_out_U0_m_axi_gmem0_AWADDR;
wire   [0:0] write_out_U0_m_axi_gmem0_AWID;
wire   [31:0] write_out_U0_m_axi_gmem0_AWLEN;
wire   [2:0] write_out_U0_m_axi_gmem0_AWSIZE;
wire   [1:0] write_out_U0_m_axi_gmem0_AWBURST;
wire   [1:0] write_out_U0_m_axi_gmem0_AWLOCK;
wire   [3:0] write_out_U0_m_axi_gmem0_AWCACHE;
wire   [2:0] write_out_U0_m_axi_gmem0_AWPROT;
wire   [3:0] write_out_U0_m_axi_gmem0_AWQOS;
wire   [3:0] write_out_U0_m_axi_gmem0_AWREGION;
wire   [0:0] write_out_U0_m_axi_gmem0_AWUSER;
wire    write_out_U0_m_axi_gmem0_WVALID;
wire   [7:0] write_out_U0_m_axi_gmem0_WDATA;
wire   [0:0] write_out_U0_m_axi_gmem0_WSTRB;
wire    write_out_U0_m_axi_gmem0_WLAST;
wire   [0:0] write_out_U0_m_axi_gmem0_WID;
wire   [0:0] write_out_U0_m_axi_gmem0_WUSER;
wire    write_out_U0_m_axi_gmem0_ARVALID;
wire   [63:0] write_out_U0_m_axi_gmem0_ARADDR;
wire   [0:0] write_out_U0_m_axi_gmem0_ARID;
wire   [31:0] write_out_U0_m_axi_gmem0_ARLEN;
wire   [2:0] write_out_U0_m_axi_gmem0_ARSIZE;
wire   [1:0] write_out_U0_m_axi_gmem0_ARBURST;
wire   [1:0] write_out_U0_m_axi_gmem0_ARLOCK;
wire   [3:0] write_out_U0_m_axi_gmem0_ARCACHE;
wire   [2:0] write_out_U0_m_axi_gmem0_ARPROT;
wire   [3:0] write_out_U0_m_axi_gmem0_ARQOS;
wire   [3:0] write_out_U0_m_axi_gmem0_ARREGION;
wire   [0:0] write_out_U0_m_axi_gmem0_ARUSER;
wire    write_out_U0_m_axi_gmem0_RREADY;
wire    write_out_U0_m_axi_gmem0_BREADY;
wire    write_out_U0_merge_out_read;
wire    split_in_full_n;
wire   [7:0] split_out_dout;
wire    split_out_empty_n;
wire   [7:0] split_out_1_dout;
wire    split_out_1_empty_n;
wire   [7:0] split_out_2_dout;
wire    split_out_2_empty_n;
wire   [7:0] split_out_3_dout;
wire    split_out_3_empty_n;
wire   [7:0] split_out_4_dout;
wire    split_out_4_empty_n;
wire   [7:0] split_out_5_dout;
wire    split_out_5_empty_n;
wire   [7:0] split_out_6_dout;
wire    split_out_6_empty_n;
wire   [7:0] split_out_7_dout;
wire    split_out_7_empty_n;
wire    merge_in_full_n;
wire    merge_in_1_full_n;
wire    merge_in_2_full_n;
wire    merge_in_3_full_n;
wire    merge_in_4_full_n;
wire    merge_in_5_full_n;
wire    merge_in_6_full_n;
wire    merge_in_7_full_n;
wire   [7:0] merge_out_dout;
wire    merge_out_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_read_in_U0_ap_ready;
wire    ap_sync_read_in_U0_ap_ready;
reg    ap_sync_reg_write_out_U0_ap_ready;
wire    ap_sync_write_out_U0_ap_ready;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_read_in_U0_ap_ready = 1'b0;
#0 ap_sync_reg_write_out_U0_ap_ready = 1'b0;
end

make_go_fast_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .in_r(in_r),
    .out_r(out_r)
);

make_go_fast_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 64 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 13 ),
    .USER_DW( 8 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(read_in_U0_m_axi_gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(read_in_U0_m_axi_gmem_ARADDR),
    .I_ARLEN(read_in_U0_m_axi_gmem_ARLEN),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(read_in_U0_m_axi_gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RFIFONUM(gmem_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(8'd0),
    .I_WSTRB(1'd0),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(1'b0)
);

make_go_fast_gmem0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 64 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 11 ),
    .USER_DW( 8 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARLEN(32'd0),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem0_RDATA),
    .I_RFIFONUM(gmem0_RFIFONUM),
    .I_AWVALID(write_out_U0_m_axi_gmem0_AWVALID),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(write_out_U0_m_axi_gmem0_AWADDR),
    .I_AWLEN(write_out_U0_m_axi_gmem0_AWLEN),
    .I_WVALID(write_out_U0_m_axi_gmem0_WVALID),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(write_out_U0_m_axi_gmem0_WDATA),
    .I_WSTRB(write_out_U0_m_axi_gmem0_WSTRB),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(write_out_U0_m_axi_gmem0_BREADY)
);

make_go_fast_read_in read_in_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(read_in_U0_ap_start),
    .ap_done(read_in_U0_ap_done),
    .ap_continue(read_in_U0_ap_continue),
    .ap_idle(read_in_U0_ap_idle),
    .ap_ready(read_in_U0_ap_ready),
    .m_axi_gmem_AWVALID(read_in_U0_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(read_in_U0_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(read_in_U0_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(read_in_U0_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(read_in_U0_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(read_in_U0_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(read_in_U0_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(read_in_U0_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(read_in_U0_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(read_in_U0_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(read_in_U0_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(read_in_U0_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(read_in_U0_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(read_in_U0_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(read_in_U0_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(read_in_U0_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(read_in_U0_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(read_in_U0_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(read_in_U0_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(read_in_U0_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(read_in_U0_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(read_in_U0_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(read_in_U0_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(read_in_U0_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(read_in_U0_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(read_in_U0_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(read_in_U0_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(read_in_U0_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(read_in_U0_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(read_in_U0_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(read_in_U0_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(gmem_RLAST),
    .m_axi_gmem_RID(gmem_RID),
    .m_axi_gmem_RFIFONUM(gmem_RFIFONUM),
    .m_axi_gmem_RUSER(gmem_RUSER),
    .m_axi_gmem_RRESP(gmem_RRESP),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(read_in_U0_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .split_in_din(read_in_U0_split_in_din),
    .split_in_full_n(split_in_full_n),
    .split_in_write(read_in_U0_split_in_write),
    .in_r(in_r)
);

make_go_fast_KPN KPN_U0(
    .split_out_0_dout(split_out_dout),
    .split_out_0_empty_n(split_out_empty_n),
    .split_out_0_read(KPN_U0_split_out_0_read),
    .merge_in_0_din(KPN_U0_merge_in_0_din),
    .merge_in_0_full_n(merge_in_full_n),
    .merge_in_0_write(KPN_U0_merge_in_0_write),
    .split_out_1_dout(split_out_1_dout),
    .split_out_1_empty_n(split_out_1_empty_n),
    .split_out_1_read(KPN_U0_split_out_1_read),
    .merge_in_1_din(KPN_U0_merge_in_1_din),
    .merge_in_1_full_n(merge_in_1_full_n),
    .merge_in_1_write(KPN_U0_merge_in_1_write),
    .split_out_2_dout(split_out_2_dout),
    .split_out_2_empty_n(split_out_2_empty_n),
    .split_out_2_read(KPN_U0_split_out_2_read),
    .merge_in_2_din(KPN_U0_merge_in_2_din),
    .merge_in_2_full_n(merge_in_2_full_n),
    .merge_in_2_write(KPN_U0_merge_in_2_write),
    .split_out_3_dout(split_out_3_dout),
    .split_out_3_empty_n(split_out_3_empty_n),
    .split_out_3_read(KPN_U0_split_out_3_read),
    .merge_in_3_din(KPN_U0_merge_in_3_din),
    .merge_in_3_full_n(merge_in_3_full_n),
    .merge_in_3_write(KPN_U0_merge_in_3_write),
    .split_out_4_dout(split_out_4_dout),
    .split_out_4_empty_n(split_out_4_empty_n),
    .split_out_4_read(KPN_U0_split_out_4_read),
    .merge_in_4_din(KPN_U0_merge_in_4_din),
    .merge_in_4_full_n(merge_in_4_full_n),
    .merge_in_4_write(KPN_U0_merge_in_4_write),
    .split_out_5_dout(split_out_5_dout),
    .split_out_5_empty_n(split_out_5_empty_n),
    .split_out_5_read(KPN_U0_split_out_5_read),
    .merge_in_5_din(KPN_U0_merge_in_5_din),
    .merge_in_5_full_n(merge_in_5_full_n),
    .merge_in_5_write(KPN_U0_merge_in_5_write),
    .split_out_6_dout(split_out_6_dout),
    .split_out_6_empty_n(split_out_6_empty_n),
    .split_out_6_read(KPN_U0_split_out_6_read),
    .merge_in_6_din(KPN_U0_merge_in_6_din),
    .merge_in_6_full_n(merge_in_6_full_n),
    .merge_in_6_write(KPN_U0_merge_in_6_write),
    .split_out_7_dout(split_out_7_dout),
    .split_out_7_empty_n(split_out_7_empty_n),
    .split_out_7_read(KPN_U0_split_out_7_read),
    .merge_in_7_din(KPN_U0_merge_in_7_din),
    .merge_in_7_full_n(merge_in_7_full_n),
    .merge_in_7_write(KPN_U0_merge_in_7_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_ready(KPN_U0_ap_ready)
);

make_go_fast_write_out write_out_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(write_out_U0_ap_start),
    .ap_done(write_out_U0_ap_done),
    .ap_continue(write_out_U0_ap_continue),
    .ap_idle(write_out_U0_ap_idle),
    .ap_ready(write_out_U0_ap_ready),
    .m_axi_gmem0_AWVALID(write_out_U0_m_axi_gmem0_AWVALID),
    .m_axi_gmem0_AWREADY(gmem0_AWREADY),
    .m_axi_gmem0_AWADDR(write_out_U0_m_axi_gmem0_AWADDR),
    .m_axi_gmem0_AWID(write_out_U0_m_axi_gmem0_AWID),
    .m_axi_gmem0_AWLEN(write_out_U0_m_axi_gmem0_AWLEN),
    .m_axi_gmem0_AWSIZE(write_out_U0_m_axi_gmem0_AWSIZE),
    .m_axi_gmem0_AWBURST(write_out_U0_m_axi_gmem0_AWBURST),
    .m_axi_gmem0_AWLOCK(write_out_U0_m_axi_gmem0_AWLOCK),
    .m_axi_gmem0_AWCACHE(write_out_U0_m_axi_gmem0_AWCACHE),
    .m_axi_gmem0_AWPROT(write_out_U0_m_axi_gmem0_AWPROT),
    .m_axi_gmem0_AWQOS(write_out_U0_m_axi_gmem0_AWQOS),
    .m_axi_gmem0_AWREGION(write_out_U0_m_axi_gmem0_AWREGION),
    .m_axi_gmem0_AWUSER(write_out_U0_m_axi_gmem0_AWUSER),
    .m_axi_gmem0_WVALID(write_out_U0_m_axi_gmem0_WVALID),
    .m_axi_gmem0_WREADY(gmem0_WREADY),
    .m_axi_gmem0_WDATA(write_out_U0_m_axi_gmem0_WDATA),
    .m_axi_gmem0_WSTRB(write_out_U0_m_axi_gmem0_WSTRB),
    .m_axi_gmem0_WLAST(write_out_U0_m_axi_gmem0_WLAST),
    .m_axi_gmem0_WID(write_out_U0_m_axi_gmem0_WID),
    .m_axi_gmem0_WUSER(write_out_U0_m_axi_gmem0_WUSER),
    .m_axi_gmem0_ARVALID(write_out_U0_m_axi_gmem0_ARVALID),
    .m_axi_gmem0_ARREADY(1'b0),
    .m_axi_gmem0_ARADDR(write_out_U0_m_axi_gmem0_ARADDR),
    .m_axi_gmem0_ARID(write_out_U0_m_axi_gmem0_ARID),
    .m_axi_gmem0_ARLEN(write_out_U0_m_axi_gmem0_ARLEN),
    .m_axi_gmem0_ARSIZE(write_out_U0_m_axi_gmem0_ARSIZE),
    .m_axi_gmem0_ARBURST(write_out_U0_m_axi_gmem0_ARBURST),
    .m_axi_gmem0_ARLOCK(write_out_U0_m_axi_gmem0_ARLOCK),
    .m_axi_gmem0_ARCACHE(write_out_U0_m_axi_gmem0_ARCACHE),
    .m_axi_gmem0_ARPROT(write_out_U0_m_axi_gmem0_ARPROT),
    .m_axi_gmem0_ARQOS(write_out_U0_m_axi_gmem0_ARQOS),
    .m_axi_gmem0_ARREGION(write_out_U0_m_axi_gmem0_ARREGION),
    .m_axi_gmem0_ARUSER(write_out_U0_m_axi_gmem0_ARUSER),
    .m_axi_gmem0_RVALID(1'b0),
    .m_axi_gmem0_RREADY(write_out_U0_m_axi_gmem0_RREADY),
    .m_axi_gmem0_RDATA(8'd0),
    .m_axi_gmem0_RLAST(1'b0),
    .m_axi_gmem0_RID(1'd0),
    .m_axi_gmem0_RFIFONUM(11'd0),
    .m_axi_gmem0_RUSER(1'd0),
    .m_axi_gmem0_RRESP(2'd0),
    .m_axi_gmem0_BVALID(gmem0_BVALID),
    .m_axi_gmem0_BREADY(write_out_U0_m_axi_gmem0_BREADY),
    .m_axi_gmem0_BRESP(gmem0_BRESP),
    .m_axi_gmem0_BID(gmem0_BID),
    .m_axi_gmem0_BUSER(gmem0_BUSER),
    .merge_out_dout(merge_out_dout),
    .merge_out_empty_n(merge_out_empty_n),
    .merge_out_read(write_out_U0_merge_out_read),
    .out_r(out_r)
);

make_go_fast_split_1I8O_w8_d0 split_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_in0_din(read_in_U0_split_in_din),
    .if_in0_full_n(split_in_full_n),
    .if_in0_write(read_in_U0_split_in_write),
    .if_out0_dout(split_out_dout),
    .if_out0_empty_n(split_out_empty_n),
    .if_out0_read(KPN_U0_split_out_0_read),
    .if_out1_dout(split_out_1_dout),
    .if_out1_empty_n(split_out_1_empty_n),
    .if_out1_read(KPN_U0_split_out_1_read),
    .if_out2_dout(split_out_2_dout),
    .if_out2_empty_n(split_out_2_empty_n),
    .if_out2_read(KPN_U0_split_out_2_read),
    .if_out3_dout(split_out_3_dout),
    .if_out3_empty_n(split_out_3_empty_n),
    .if_out3_read(KPN_U0_split_out_3_read),
    .if_out4_dout(split_out_4_dout),
    .if_out4_empty_n(split_out_4_empty_n),
    .if_out4_read(KPN_U0_split_out_4_read),
    .if_out5_dout(split_out_5_dout),
    .if_out5_empty_n(split_out_5_empty_n),
    .if_out5_read(KPN_U0_split_out_5_read),
    .if_out6_dout(split_out_6_dout),
    .if_out6_empty_n(split_out_6_empty_n),
    .if_out6_read(KPN_U0_split_out_6_read),
    .if_out7_dout(split_out_7_dout),
    .if_out7_empty_n(split_out_7_empty_n),
    .if_out7_read(KPN_U0_split_out_7_read)
);

make_go_fast_merge_8I1O_w8_d0 merge_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_in0_din(KPN_U0_merge_in_0_din),
    .if_in0_full_n(merge_in_full_n),
    .if_in0_write(KPN_U0_merge_in_0_write),
    .if_in1_din(KPN_U0_merge_in_1_din),
    .if_in1_full_n(merge_in_1_full_n),
    .if_in1_write(KPN_U0_merge_in_1_write),
    .if_in2_din(KPN_U0_merge_in_2_din),
    .if_in2_full_n(merge_in_2_full_n),
    .if_in2_write(KPN_U0_merge_in_2_write),
    .if_in3_din(KPN_U0_merge_in_3_din),
    .if_in3_full_n(merge_in_3_full_n),
    .if_in3_write(KPN_U0_merge_in_3_write),
    .if_in4_din(KPN_U0_merge_in_4_din),
    .if_in4_full_n(merge_in_4_full_n),
    .if_in4_write(KPN_U0_merge_in_4_write),
    .if_in5_din(KPN_U0_merge_in_5_din),
    .if_in5_full_n(merge_in_5_full_n),
    .if_in5_write(KPN_U0_merge_in_5_write),
    .if_in6_din(KPN_U0_merge_in_6_din),
    .if_in6_full_n(merge_in_6_full_n),
    .if_in6_write(KPN_U0_merge_in_6_write),
    .if_in7_din(KPN_U0_merge_in_7_din),
    .if_in7_full_n(merge_in_7_full_n),
    .if_in7_write(KPN_U0_merge_in_7_write),
    .if_out0_dout(merge_out_dout),
    .if_out0_empty_n(merge_out_empty_n),
    .if_out0_read(write_out_U0_merge_out_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_read_in_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_read_in_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_read_in_U0_ap_ready <= ap_sync_read_in_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_write_out_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_write_out_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_write_out_U0_ap_ready <= ap_sync_write_out_U0_ap_ready;
        end
    end
end

assign ap_done = write_out_U0_ap_done;

assign ap_idle = (write_out_U0_ap_idle & read_in_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_read_in_U0_ap_ready = (read_in_U0_ap_ready | ap_sync_reg_read_in_U0_ap_ready);

assign ap_sync_ready = (ap_sync_write_out_U0_ap_ready & ap_sync_read_in_U0_ap_ready);

assign ap_sync_write_out_U0_ap_ready = (write_out_U0_ap_ready | ap_sync_reg_write_out_U0_ap_ready);

assign gmem0_BID = 1'd0;

assign gmem0_BRESP = 2'd0;

assign gmem0_BUSER = 1'd0;

assign gmem_RID = 1'd0;

assign gmem_RLAST = 1'b0;

assign gmem_RRESP = 2'd0;

assign gmem_RUSER = 1'd0;

assign read_in_U0_ap_continue = 1'b1;

assign read_in_U0_ap_start = ((ap_sync_reg_read_in_U0_ap_ready ^ 1'b1) & ap_start);

assign write_out_U0_ap_continue = 1'b1;

assign write_out_U0_ap_start = ((ap_sync_reg_write_out_U0_ap_ready ^ 1'b1) & ap_start);

endmodule //make_go_fast
