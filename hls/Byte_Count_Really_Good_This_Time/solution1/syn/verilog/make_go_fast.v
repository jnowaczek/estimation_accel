// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="make_go_fast_make_go_fast,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=3.650000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=158,HLS_SYN_LUT=610,HLS_VERSION=2023_1}" *)

module make_go_fast (
        in_r_TDATA,
        in_r_TKEEP,
        in_r_TSTRB,
        in_r_TLAST,
        n,
        out_r_TDATA,
        out_r_TKEEP,
        out_r_TSTRB,
        out_r_TLAST,
        ap_clk,
        ap_rst_n,
        in_r_TVALID,
        in_r_TREADY,
        ap_start,
        out_r_TVALID,
        out_r_TREADY,
        ap_done,
        ap_ready,
        ap_idle
);


input  [7:0] in_r_TDATA;
input  [0:0] in_r_TKEEP;
input  [0:0] in_r_TSTRB;
input  [0:0] in_r_TLAST;
input  [31:0] n;
output  [7:0] out_r_TDATA;
output  [0:0] out_r_TKEEP;
output  [0:0] out_r_TSTRB;
output  [0:0] out_r_TLAST;
input   ap_clk;
input   ap_rst_n;
input   in_r_TVALID;
output   in_r_TREADY;
input   ap_start;
output   out_r_TVALID;
input   out_r_TREADY;
output   ap_done;
output   ap_ready;
output   ap_idle;

 reg    ap_rst_n_inv;
wire    read_in_U0_ap_start;
wire    read_in_U0_ap_done;
wire    read_in_U0_ap_continue;
wire    read_in_U0_ap_idle;
wire    read_in_U0_ap_ready;
wire   [7:0] read_in_U0_split_in_din;
wire    read_in_U0_split_in_write;
wire    read_in_U0_in_r_TREADY;
wire    KPN_U0_split_out_0_read;
wire   [7:0] KPN_U0_merge_in_0_din;
wire    KPN_U0_merge_in_0_write;
wire    KPN_U0_split_out_1_read;
wire   [7:0] KPN_U0_merge_in_1_din;
wire    KPN_U0_merge_in_1_write;
wire    KPN_U0_split_out_2_read;
wire   [7:0] KPN_U0_merge_in_2_din;
wire    KPN_U0_merge_in_2_write;
wire    KPN_U0_split_out_3_read;
wire   [7:0] KPN_U0_merge_in_3_din;
wire    KPN_U0_merge_in_3_write;
wire    KPN_U0_split_out_4_read;
wire   [7:0] KPN_U0_merge_in_4_din;
wire    KPN_U0_merge_in_4_write;
wire    KPN_U0_split_out_5_read;
wire   [7:0] KPN_U0_merge_in_5_din;
wire    KPN_U0_merge_in_5_write;
wire    KPN_U0_split_out_6_read;
wire   [7:0] KPN_U0_merge_in_6_din;
wire    KPN_U0_merge_in_6_write;
wire    KPN_U0_split_out_7_read;
wire   [7:0] KPN_U0_merge_in_7_din;
wire    KPN_U0_merge_in_7_write;
wire    KPN_U0_ap_ready;
wire    write_out_U0_ap_start;
wire    write_out_U0_ap_done;
wire    write_out_U0_ap_continue;
wire    write_out_U0_ap_idle;
wire    write_out_U0_ap_ready;
wire    write_out_U0_merge_out_read;
wire   [7:0] write_out_U0_out_r_TDATA;
wire    write_out_U0_out_r_TVALID;
wire   [0:0] write_out_U0_out_r_TKEEP;
wire   [0:0] write_out_U0_out_r_TSTRB;
wire   [0:0] write_out_U0_out_r_TLAST;
wire    split_in_full_n;
wire   [7:0] split_out_dout;
wire    split_out_empty_n;
wire   [7:0] split_out_1_dout;
wire    split_out_1_empty_n;
wire   [7:0] split_out_2_dout;
wire    split_out_2_empty_n;
wire   [7:0] split_out_3_dout;
wire    split_out_3_empty_n;
wire   [7:0] split_out_4_dout;
wire    split_out_4_empty_n;
wire   [7:0] split_out_5_dout;
wire    split_out_5_empty_n;
wire   [7:0] split_out_6_dout;
wire    split_out_6_empty_n;
wire   [7:0] split_out_7_dout;
wire    split_out_7_empty_n;
wire    merge_in_full_n;
wire    merge_in_1_full_n;
wire    merge_in_2_full_n;
wire    merge_in_3_full_n;
wire    merge_in_4_full_n;
wire    merge_in_5_full_n;
wire    merge_in_6_full_n;
wire    merge_in_7_full_n;
wire   [7:0] merge_out_dout;
wire    merge_out_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_read_in_U0_ap_ready;
wire    ap_sync_read_in_U0_ap_ready;
reg    ap_sync_reg_write_out_U0_ap_ready;
wire    ap_sync_write_out_U0_ap_ready;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_read_in_U0_ap_ready = 1'b0;
#0 ap_sync_reg_write_out_U0_ap_ready = 1'b0;
end

make_go_fast_read_in read_in_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(read_in_U0_ap_start),
    .ap_done(read_in_U0_ap_done),
    .ap_continue(read_in_U0_ap_continue),
    .ap_idle(read_in_U0_ap_idle),
    .ap_ready(read_in_U0_ap_ready),
    .in_r_TVALID(in_r_TVALID),
    .split_in_din(read_in_U0_split_in_din),
    .split_in_full_n(split_in_full_n),
    .split_in_write(read_in_U0_split_in_write),
    .in_r_TDATA(in_r_TDATA),
    .in_r_TREADY(read_in_U0_in_r_TREADY),
    .in_r_TKEEP(in_r_TKEEP),
    .in_r_TSTRB(in_r_TSTRB),
    .in_r_TLAST(in_r_TLAST),
    .n(n)
);

make_go_fast_KPN KPN_U0(
    .split_out_0_dout(split_out_dout),
    .split_out_0_empty_n(split_out_empty_n),
    .split_out_0_read(KPN_U0_split_out_0_read),
    .merge_in_0_din(KPN_U0_merge_in_0_din),
    .merge_in_0_full_n(merge_in_full_n),
    .merge_in_0_write(KPN_U0_merge_in_0_write),
    .split_out_1_dout(split_out_1_dout),
    .split_out_1_empty_n(split_out_1_empty_n),
    .split_out_1_read(KPN_U0_split_out_1_read),
    .merge_in_1_din(KPN_U0_merge_in_1_din),
    .merge_in_1_full_n(merge_in_1_full_n),
    .merge_in_1_write(KPN_U0_merge_in_1_write),
    .split_out_2_dout(split_out_2_dout),
    .split_out_2_empty_n(split_out_2_empty_n),
    .split_out_2_read(KPN_U0_split_out_2_read),
    .merge_in_2_din(KPN_U0_merge_in_2_din),
    .merge_in_2_full_n(merge_in_2_full_n),
    .merge_in_2_write(KPN_U0_merge_in_2_write),
    .split_out_3_dout(split_out_3_dout),
    .split_out_3_empty_n(split_out_3_empty_n),
    .split_out_3_read(KPN_U0_split_out_3_read),
    .merge_in_3_din(KPN_U0_merge_in_3_din),
    .merge_in_3_full_n(merge_in_3_full_n),
    .merge_in_3_write(KPN_U0_merge_in_3_write),
    .split_out_4_dout(split_out_4_dout),
    .split_out_4_empty_n(split_out_4_empty_n),
    .split_out_4_read(KPN_U0_split_out_4_read),
    .merge_in_4_din(KPN_U0_merge_in_4_din),
    .merge_in_4_full_n(merge_in_4_full_n),
    .merge_in_4_write(KPN_U0_merge_in_4_write),
    .split_out_5_dout(split_out_5_dout),
    .split_out_5_empty_n(split_out_5_empty_n),
    .split_out_5_read(KPN_U0_split_out_5_read),
    .merge_in_5_din(KPN_U0_merge_in_5_din),
    .merge_in_5_full_n(merge_in_5_full_n),
    .merge_in_5_write(KPN_U0_merge_in_5_write),
    .split_out_6_dout(split_out_6_dout),
    .split_out_6_empty_n(split_out_6_empty_n),
    .split_out_6_read(KPN_U0_split_out_6_read),
    .merge_in_6_din(KPN_U0_merge_in_6_din),
    .merge_in_6_full_n(merge_in_6_full_n),
    .merge_in_6_write(KPN_U0_merge_in_6_write),
    .split_out_7_dout(split_out_7_dout),
    .split_out_7_empty_n(split_out_7_empty_n),
    .split_out_7_read(KPN_U0_split_out_7_read),
    .merge_in_7_din(KPN_U0_merge_in_7_din),
    .merge_in_7_full_n(merge_in_7_full_n),
    .merge_in_7_write(KPN_U0_merge_in_7_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_ready(KPN_U0_ap_ready)
);

make_go_fast_write_out write_out_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(write_out_U0_ap_start),
    .ap_done(write_out_U0_ap_done),
    .ap_continue(write_out_U0_ap_continue),
    .ap_idle(write_out_U0_ap_idle),
    .ap_ready(write_out_U0_ap_ready),
    .merge_out_dout(merge_out_dout),
    .merge_out_empty_n(merge_out_empty_n),
    .merge_out_read(write_out_U0_merge_out_read),
    .out_r_TREADY(out_r_TREADY),
    .n(n),
    .out_r_TDATA(write_out_U0_out_r_TDATA),
    .out_r_TVALID(write_out_U0_out_r_TVALID),
    .out_r_TKEEP(write_out_U0_out_r_TKEEP),
    .out_r_TSTRB(write_out_U0_out_r_TSTRB),
    .out_r_TLAST(write_out_U0_out_r_TLAST)
);

make_go_fast_split_1I8O_w8_d0 split_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_in0_din(read_in_U0_split_in_din),
    .if_in0_full_n(split_in_full_n),
    .if_in0_write(read_in_U0_split_in_write),
    .if_out0_dout(split_out_dout),
    .if_out0_empty_n(split_out_empty_n),
    .if_out0_read(KPN_U0_split_out_0_read),
    .if_out1_dout(split_out_1_dout),
    .if_out1_empty_n(split_out_1_empty_n),
    .if_out1_read(KPN_U0_split_out_1_read),
    .if_out2_dout(split_out_2_dout),
    .if_out2_empty_n(split_out_2_empty_n),
    .if_out2_read(KPN_U0_split_out_2_read),
    .if_out3_dout(split_out_3_dout),
    .if_out3_empty_n(split_out_3_empty_n),
    .if_out3_read(KPN_U0_split_out_3_read),
    .if_out4_dout(split_out_4_dout),
    .if_out4_empty_n(split_out_4_empty_n),
    .if_out4_read(KPN_U0_split_out_4_read),
    .if_out5_dout(split_out_5_dout),
    .if_out5_empty_n(split_out_5_empty_n),
    .if_out5_read(KPN_U0_split_out_5_read),
    .if_out6_dout(split_out_6_dout),
    .if_out6_empty_n(split_out_6_empty_n),
    .if_out6_read(KPN_U0_split_out_6_read),
    .if_out7_dout(split_out_7_dout),
    .if_out7_empty_n(split_out_7_empty_n),
    .if_out7_read(KPN_U0_split_out_7_read)
);

make_go_fast_merge_8I1O_w8_d0 merge_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_in0_din(KPN_U0_merge_in_0_din),
    .if_in0_full_n(merge_in_full_n),
    .if_in0_write(KPN_U0_merge_in_0_write),
    .if_in1_din(KPN_U0_merge_in_1_din),
    .if_in1_full_n(merge_in_1_full_n),
    .if_in1_write(KPN_U0_merge_in_1_write),
    .if_in2_din(KPN_U0_merge_in_2_din),
    .if_in2_full_n(merge_in_2_full_n),
    .if_in2_write(KPN_U0_merge_in_2_write),
    .if_in3_din(KPN_U0_merge_in_3_din),
    .if_in3_full_n(merge_in_3_full_n),
    .if_in3_write(KPN_U0_merge_in_3_write),
    .if_in4_din(KPN_U0_merge_in_4_din),
    .if_in4_full_n(merge_in_4_full_n),
    .if_in4_write(KPN_U0_merge_in_4_write),
    .if_in5_din(KPN_U0_merge_in_5_din),
    .if_in5_full_n(merge_in_5_full_n),
    .if_in5_write(KPN_U0_merge_in_5_write),
    .if_in6_din(KPN_U0_merge_in_6_din),
    .if_in6_full_n(merge_in_6_full_n),
    .if_in6_write(KPN_U0_merge_in_6_write),
    .if_in7_din(KPN_U0_merge_in_7_din),
    .if_in7_full_n(merge_in_7_full_n),
    .if_in7_write(KPN_U0_merge_in_7_write),
    .if_out0_dout(merge_out_dout),
    .if_out0_empty_n(merge_out_empty_n),
    .if_out0_read(write_out_U0_merge_out_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_read_in_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_read_in_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_read_in_U0_ap_ready <= ap_sync_read_in_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_write_out_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_write_out_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_write_out_U0_ap_ready <= ap_sync_write_out_U0_ap_ready;
        end
    end
end

assign ap_done = write_out_U0_ap_done;

assign ap_idle = (write_out_U0_ap_idle & read_in_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_read_in_U0_ap_ready = (read_in_U0_ap_ready | ap_sync_reg_read_in_U0_ap_ready);

assign ap_sync_ready = (ap_sync_write_out_U0_ap_ready & ap_sync_read_in_U0_ap_ready);

assign ap_sync_write_out_U0_ap_ready = (write_out_U0_ap_ready | ap_sync_reg_write_out_U0_ap_ready);

assign in_r_TREADY = read_in_U0_in_r_TREADY;

assign out_r_TDATA = write_out_U0_out_r_TDATA;

assign out_r_TKEEP = write_out_U0_out_r_TKEEP;

assign out_r_TLAST = write_out_U0_out_r_TLAST;

assign out_r_TSTRB = write_out_U0_out_r_TSTRB;

assign out_r_TVALID = write_out_U0_out_r_TVALID;

assign read_in_U0_ap_continue = 1'b1;

assign read_in_U0_ap_start = ((ap_sync_reg_read_in_U0_ap_ready ^ 1'b1) & ap_start);

assign write_out_U0_ap_continue = 1'b1;

assign write_out_U0_ap_start = ((ap_sync_reg_write_out_U0_ap_ready ^ 1'b1) & ap_start);

endmodule //make_go_fast
