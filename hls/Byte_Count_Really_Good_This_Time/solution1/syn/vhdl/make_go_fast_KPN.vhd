-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity make_go_fast_KPN is
port (
    split_out_0_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    split_out_0_empty_n : IN STD_LOGIC;
    split_out_0_read : OUT STD_LOGIC;
    merge_in_0_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_in_0_full_n : IN STD_LOGIC;
    merge_in_0_write : OUT STD_LOGIC;
    split_out_1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    split_out_1_empty_n : IN STD_LOGIC;
    split_out_1_read : OUT STD_LOGIC;
    merge_in_1_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_in_1_full_n : IN STD_LOGIC;
    merge_in_1_write : OUT STD_LOGIC;
    split_out_2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    split_out_2_empty_n : IN STD_LOGIC;
    split_out_2_read : OUT STD_LOGIC;
    merge_in_2_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_in_2_full_n : IN STD_LOGIC;
    merge_in_2_write : OUT STD_LOGIC;
    split_out_3_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    split_out_3_empty_n : IN STD_LOGIC;
    split_out_3_read : OUT STD_LOGIC;
    merge_in_3_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_in_3_full_n : IN STD_LOGIC;
    merge_in_3_write : OUT STD_LOGIC;
    split_out_4_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    split_out_4_empty_n : IN STD_LOGIC;
    split_out_4_read : OUT STD_LOGIC;
    merge_in_4_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_in_4_full_n : IN STD_LOGIC;
    merge_in_4_write : OUT STD_LOGIC;
    split_out_5_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    split_out_5_empty_n : IN STD_LOGIC;
    split_out_5_read : OUT STD_LOGIC;
    merge_in_5_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_in_5_full_n : IN STD_LOGIC;
    merge_in_5_write : OUT STD_LOGIC;
    split_out_6_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    split_out_6_empty_n : IN STD_LOGIC;
    split_out_6_read : OUT STD_LOGIC;
    merge_in_6_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_in_6_full_n : IN STD_LOGIC;
    merge_in_6_write : OUT STD_LOGIC;
    split_out_7_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    split_out_7_empty_n : IN STD_LOGIC;
    split_out_7_read : OUT STD_LOGIC;
    merge_in_7_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    merge_in_7_full_n : IN STD_LOGIC;
    merge_in_7_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC );
end;


architecture behav of make_go_fast_KPN is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal worker_1_U0_ap_start : STD_LOGIC;
    signal worker_1_U0_ap_done : STD_LOGIC;
    signal worker_1_U0_ap_continue : STD_LOGIC;
    signal worker_1_U0_ap_idle : STD_LOGIC;
    signal worker_1_U0_ap_ready : STD_LOGIC;
    signal worker_1_U0_split_out_0_read : STD_LOGIC;
    signal worker_1_U0_merge_in_0_din : STD_LOGIC_VECTOR (7 downto 0);
    signal worker_1_U0_merge_in_0_write : STD_LOGIC;
    signal worker_2_U0_ap_start : STD_LOGIC;
    signal worker_2_U0_ap_done : STD_LOGIC;
    signal worker_2_U0_ap_continue : STD_LOGIC;
    signal worker_2_U0_ap_idle : STD_LOGIC;
    signal worker_2_U0_ap_ready : STD_LOGIC;
    signal worker_2_U0_split_out_1_read : STD_LOGIC;
    signal worker_2_U0_merge_in_1_din : STD_LOGIC_VECTOR (7 downto 0);
    signal worker_2_U0_merge_in_1_write : STD_LOGIC;
    signal worker_3_U0_ap_start : STD_LOGIC;
    signal worker_3_U0_ap_done : STD_LOGIC;
    signal worker_3_U0_ap_continue : STD_LOGIC;
    signal worker_3_U0_ap_idle : STD_LOGIC;
    signal worker_3_U0_ap_ready : STD_LOGIC;
    signal worker_3_U0_split_out_2_read : STD_LOGIC;
    signal worker_3_U0_merge_in_2_din : STD_LOGIC_VECTOR (7 downto 0);
    signal worker_3_U0_merge_in_2_write : STD_LOGIC;
    signal worker_4_U0_ap_start : STD_LOGIC;
    signal worker_4_U0_ap_done : STD_LOGIC;
    signal worker_4_U0_ap_continue : STD_LOGIC;
    signal worker_4_U0_ap_idle : STD_LOGIC;
    signal worker_4_U0_ap_ready : STD_LOGIC;
    signal worker_4_U0_split_out_3_read : STD_LOGIC;
    signal worker_4_U0_merge_in_3_din : STD_LOGIC_VECTOR (7 downto 0);
    signal worker_4_U0_merge_in_3_write : STD_LOGIC;
    signal worker_5_U0_ap_start : STD_LOGIC;
    signal worker_5_U0_ap_done : STD_LOGIC;
    signal worker_5_U0_ap_continue : STD_LOGIC;
    signal worker_5_U0_ap_idle : STD_LOGIC;
    signal worker_5_U0_ap_ready : STD_LOGIC;
    signal worker_5_U0_split_out_4_read : STD_LOGIC;
    signal worker_5_U0_merge_in_4_din : STD_LOGIC_VECTOR (7 downto 0);
    signal worker_5_U0_merge_in_4_write : STD_LOGIC;
    signal worker_6_U0_ap_start : STD_LOGIC;
    signal worker_6_U0_ap_done : STD_LOGIC;
    signal worker_6_U0_ap_continue : STD_LOGIC;
    signal worker_6_U0_ap_idle : STD_LOGIC;
    signal worker_6_U0_ap_ready : STD_LOGIC;
    signal worker_6_U0_split_out_5_read : STD_LOGIC;
    signal worker_6_U0_merge_in_5_din : STD_LOGIC_VECTOR (7 downto 0);
    signal worker_6_U0_merge_in_5_write : STD_LOGIC;
    signal worker_7_U0_ap_start : STD_LOGIC;
    signal worker_7_U0_ap_done : STD_LOGIC;
    signal worker_7_U0_ap_continue : STD_LOGIC;
    signal worker_7_U0_ap_idle : STD_LOGIC;
    signal worker_7_U0_ap_ready : STD_LOGIC;
    signal worker_7_U0_split_out_6_read : STD_LOGIC;
    signal worker_7_U0_merge_in_6_din : STD_LOGIC_VECTOR (7 downto 0);
    signal worker_7_U0_merge_in_6_write : STD_LOGIC;
    signal worker_U0_ap_start : STD_LOGIC;
    signal worker_U0_ap_done : STD_LOGIC;
    signal worker_U0_ap_continue : STD_LOGIC;
    signal worker_U0_ap_idle : STD_LOGIC;
    signal worker_U0_ap_ready : STD_LOGIC;
    signal worker_U0_split_out_7_read : STD_LOGIC;
    signal worker_U0_merge_in_7_din : STD_LOGIC_VECTOR (7 downto 0);
    signal worker_U0_merge_in_7_write : STD_LOGIC;

    component make_go_fast_worker_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        split_out_0_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        split_out_0_empty_n : IN STD_LOGIC;
        split_out_0_read : OUT STD_LOGIC;
        merge_in_0_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        merge_in_0_full_n : IN STD_LOGIC;
        merge_in_0_write : OUT STD_LOGIC );
    end component;


    component make_go_fast_worker_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        split_out_1_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        split_out_1_empty_n : IN STD_LOGIC;
        split_out_1_read : OUT STD_LOGIC;
        merge_in_1_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        merge_in_1_full_n : IN STD_LOGIC;
        merge_in_1_write : OUT STD_LOGIC );
    end component;


    component make_go_fast_worker_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        split_out_2_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        split_out_2_empty_n : IN STD_LOGIC;
        split_out_2_read : OUT STD_LOGIC;
        merge_in_2_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        merge_in_2_full_n : IN STD_LOGIC;
        merge_in_2_write : OUT STD_LOGIC );
    end component;


    component make_go_fast_worker_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        split_out_3_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        split_out_3_empty_n : IN STD_LOGIC;
        split_out_3_read : OUT STD_LOGIC;
        merge_in_3_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        merge_in_3_full_n : IN STD_LOGIC;
        merge_in_3_write : OUT STD_LOGIC );
    end component;


    component make_go_fast_worker_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        split_out_4_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        split_out_4_empty_n : IN STD_LOGIC;
        split_out_4_read : OUT STD_LOGIC;
        merge_in_4_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        merge_in_4_full_n : IN STD_LOGIC;
        merge_in_4_write : OUT STD_LOGIC );
    end component;


    component make_go_fast_worker_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        split_out_5_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        split_out_5_empty_n : IN STD_LOGIC;
        split_out_5_read : OUT STD_LOGIC;
        merge_in_5_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        merge_in_5_full_n : IN STD_LOGIC;
        merge_in_5_write : OUT STD_LOGIC );
    end component;


    component make_go_fast_worker_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        split_out_6_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        split_out_6_empty_n : IN STD_LOGIC;
        split_out_6_read : OUT STD_LOGIC;
        merge_in_6_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        merge_in_6_full_n : IN STD_LOGIC;
        merge_in_6_write : OUT STD_LOGIC );
    end component;


    component make_go_fast_worker IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        split_out_7_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        split_out_7_empty_n : IN STD_LOGIC;
        split_out_7_read : OUT STD_LOGIC;
        merge_in_7_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        merge_in_7_full_n : IN STD_LOGIC;
        merge_in_7_write : OUT STD_LOGIC );
    end component;



begin
    worker_1_U0 : component make_go_fast_worker_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => worker_1_U0_ap_start,
        ap_done => worker_1_U0_ap_done,
        ap_continue => worker_1_U0_ap_continue,
        ap_idle => worker_1_U0_ap_idle,
        ap_ready => worker_1_U0_ap_ready,
        split_out_0_dout => split_out_0_dout,
        split_out_0_empty_n => split_out_0_empty_n,
        split_out_0_read => worker_1_U0_split_out_0_read,
        merge_in_0_din => worker_1_U0_merge_in_0_din,
        merge_in_0_full_n => merge_in_0_full_n,
        merge_in_0_write => worker_1_U0_merge_in_0_write);

    worker_2_U0 : component make_go_fast_worker_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => worker_2_U0_ap_start,
        ap_done => worker_2_U0_ap_done,
        ap_continue => worker_2_U0_ap_continue,
        ap_idle => worker_2_U0_ap_idle,
        ap_ready => worker_2_U0_ap_ready,
        split_out_1_dout => split_out_1_dout,
        split_out_1_empty_n => split_out_1_empty_n,
        split_out_1_read => worker_2_U0_split_out_1_read,
        merge_in_1_din => worker_2_U0_merge_in_1_din,
        merge_in_1_full_n => merge_in_1_full_n,
        merge_in_1_write => worker_2_U0_merge_in_1_write);

    worker_3_U0 : component make_go_fast_worker_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => worker_3_U0_ap_start,
        ap_done => worker_3_U0_ap_done,
        ap_continue => worker_3_U0_ap_continue,
        ap_idle => worker_3_U0_ap_idle,
        ap_ready => worker_3_U0_ap_ready,
        split_out_2_dout => split_out_2_dout,
        split_out_2_empty_n => split_out_2_empty_n,
        split_out_2_read => worker_3_U0_split_out_2_read,
        merge_in_2_din => worker_3_U0_merge_in_2_din,
        merge_in_2_full_n => merge_in_2_full_n,
        merge_in_2_write => worker_3_U0_merge_in_2_write);

    worker_4_U0 : component make_go_fast_worker_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => worker_4_U0_ap_start,
        ap_done => worker_4_U0_ap_done,
        ap_continue => worker_4_U0_ap_continue,
        ap_idle => worker_4_U0_ap_idle,
        ap_ready => worker_4_U0_ap_ready,
        split_out_3_dout => split_out_3_dout,
        split_out_3_empty_n => split_out_3_empty_n,
        split_out_3_read => worker_4_U0_split_out_3_read,
        merge_in_3_din => worker_4_U0_merge_in_3_din,
        merge_in_3_full_n => merge_in_3_full_n,
        merge_in_3_write => worker_4_U0_merge_in_3_write);

    worker_5_U0 : component make_go_fast_worker_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => worker_5_U0_ap_start,
        ap_done => worker_5_U0_ap_done,
        ap_continue => worker_5_U0_ap_continue,
        ap_idle => worker_5_U0_ap_idle,
        ap_ready => worker_5_U0_ap_ready,
        split_out_4_dout => split_out_4_dout,
        split_out_4_empty_n => split_out_4_empty_n,
        split_out_4_read => worker_5_U0_split_out_4_read,
        merge_in_4_din => worker_5_U0_merge_in_4_din,
        merge_in_4_full_n => merge_in_4_full_n,
        merge_in_4_write => worker_5_U0_merge_in_4_write);

    worker_6_U0 : component make_go_fast_worker_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => worker_6_U0_ap_start,
        ap_done => worker_6_U0_ap_done,
        ap_continue => worker_6_U0_ap_continue,
        ap_idle => worker_6_U0_ap_idle,
        ap_ready => worker_6_U0_ap_ready,
        split_out_5_dout => split_out_5_dout,
        split_out_5_empty_n => split_out_5_empty_n,
        split_out_5_read => worker_6_U0_split_out_5_read,
        merge_in_5_din => worker_6_U0_merge_in_5_din,
        merge_in_5_full_n => merge_in_5_full_n,
        merge_in_5_write => worker_6_U0_merge_in_5_write);

    worker_7_U0 : component make_go_fast_worker_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => worker_7_U0_ap_start,
        ap_done => worker_7_U0_ap_done,
        ap_continue => worker_7_U0_ap_continue,
        ap_idle => worker_7_U0_ap_idle,
        ap_ready => worker_7_U0_ap_ready,
        split_out_6_dout => split_out_6_dout,
        split_out_6_empty_n => split_out_6_empty_n,
        split_out_6_read => worker_7_U0_split_out_6_read,
        merge_in_6_din => worker_7_U0_merge_in_6_din,
        merge_in_6_full_n => merge_in_6_full_n,
        merge_in_6_write => worker_7_U0_merge_in_6_write);

    worker_U0 : component make_go_fast_worker
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => worker_U0_ap_start,
        ap_done => worker_U0_ap_done,
        ap_continue => worker_U0_ap_continue,
        ap_idle => worker_U0_ap_idle,
        ap_ready => worker_U0_ap_ready,
        split_out_7_dout => split_out_7_dout,
        split_out_7_empty_n => split_out_7_empty_n,
        split_out_7_read => worker_U0_split_out_7_read,
        merge_in_7_din => worker_U0_merge_in_7_din,
        merge_in_7_full_n => merge_in_7_full_n,
        merge_in_7_write => worker_U0_merge_in_7_write);




    ap_ready <= ap_const_logic_1;
    merge_in_0_din <= worker_1_U0_merge_in_0_din;
    merge_in_0_write <= worker_1_U0_merge_in_0_write;
    merge_in_1_din <= worker_2_U0_merge_in_1_din;
    merge_in_1_write <= worker_2_U0_merge_in_1_write;
    merge_in_2_din <= worker_3_U0_merge_in_2_din;
    merge_in_2_write <= worker_3_U0_merge_in_2_write;
    merge_in_3_din <= worker_4_U0_merge_in_3_din;
    merge_in_3_write <= worker_4_U0_merge_in_3_write;
    merge_in_4_din <= worker_5_U0_merge_in_4_din;
    merge_in_4_write <= worker_5_U0_merge_in_4_write;
    merge_in_5_din <= worker_6_U0_merge_in_5_din;
    merge_in_5_write <= worker_6_U0_merge_in_5_write;
    merge_in_6_din <= worker_7_U0_merge_in_6_din;
    merge_in_6_write <= worker_7_U0_merge_in_6_write;
    merge_in_7_din <= worker_U0_merge_in_7_din;
    merge_in_7_write <= worker_U0_merge_in_7_write;
    split_out_0_read <= worker_1_U0_split_out_0_read;
    split_out_1_read <= worker_2_U0_split_out_1_read;
    split_out_2_read <= worker_3_U0_split_out_2_read;
    split_out_3_read <= worker_4_U0_split_out_3_read;
    split_out_4_read <= worker_5_U0_split_out_4_read;
    split_out_5_read <= worker_6_U0_split_out_5_read;
    split_out_6_read <= worker_7_U0_split_out_6_read;
    split_out_7_read <= worker_U0_split_out_7_read;
    worker_1_U0_ap_continue <= ap_const_logic_1;
    worker_1_U0_ap_start <= ap_const_logic_1;
    worker_2_U0_ap_continue <= ap_const_logic_1;
    worker_2_U0_ap_start <= ap_const_logic_1;
    worker_3_U0_ap_continue <= ap_const_logic_1;
    worker_3_U0_ap_start <= ap_const_logic_1;
    worker_4_U0_ap_continue <= ap_const_logic_1;
    worker_4_U0_ap_start <= ap_const_logic_1;
    worker_5_U0_ap_continue <= ap_const_logic_1;
    worker_5_U0_ap_start <= ap_const_logic_1;
    worker_6_U0_ap_continue <= ap_const_logic_1;
    worker_6_U0_ap_start <= ap_const_logic_1;
    worker_7_U0_ap_continue <= ap_const_logic_1;
    worker_7_U0_ap_start <= ap_const_logic_1;
    worker_U0_ap_continue <= ap_const_logic_1;
    worker_U0_ap_start <= ap_const_logic_1;
end behav;
