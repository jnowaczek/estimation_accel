-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity make_go_fast_count_appearances is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    bytes_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    bytes_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    bytes_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    bytes_empty_n : IN STD_LOGIC;
    bytes_read : OUT STD_LOGIC;
    appearances_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    appearances_ce0 : OUT STD_LOGIC;
    appearances_we0 : OUT STD_LOGIC;
    appearances_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    appearances_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    appearances_full_n : IN STD_LOGIC;
    appearances_write : OUT STD_LOGIC;
    appearances_empty_n : IN STD_LOGIC;
    appearances_read : OUT STD_LOGIC );
end;


architecture behav of make_go_fast_count_appearances is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal appearances_o_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_start : STD_LOGIC;
    signal grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_done : STD_LOGIC;
    signal grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_idle : STD_LOGIC;
    signal grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_ready : STD_LOGIC;
    signal grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_ce0 : STD_LOGIC;
    signal grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_we0 : STD_LOGIC;
    signal grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_write : STD_LOGIC;
    signal grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_start : STD_LOGIC;
    signal grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_done : STD_LOGIC;
    signal grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_idle : STD_LOGIC;
    signal grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_ready : STD_LOGIC;
    signal grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_bytes_read : STD_LOGIC;
    signal grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_appearances_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_appearances_ce0 : STD_LOGIC;
    signal grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_appearances_we0 : STD_LOGIC;
    signal grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_appearances_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_appearances_write : STD_LOGIC;
    signal grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_count_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_count_out_ap_vld : STD_LOGIC;
    signal grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_prev_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_prev_out_ap_vld : STD_LOGIC;
    signal grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call5 : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal sext_ln49_fu_94_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component make_go_fast_count_appearances_Pipeline_VITIS_LOOP_31_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        appearances_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        appearances_ce0 : OUT STD_LOGIC;
        appearances_we0 : OUT STD_LOGIC;
        appearances_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        appearances_full_n : IN STD_LOGIC;
        appearances_write : OUT STD_LOGIC );
    end component;


    component make_go_fast_count_appearances_Pipeline_VITIS_LOOP_36_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bytes_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        bytes_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
        bytes_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
        bytes_empty_n : IN STD_LOGIC;
        bytes_read : OUT STD_LOGIC;
        appearances_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        appearances_ce0 : OUT STD_LOGIC;
        appearances_we0 : OUT STD_LOGIC;
        appearances_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        appearances_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        appearances_full_n : IN STD_LOGIC;
        appearances_write : OUT STD_LOGIC;
        count_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        count_out_ap_vld : OUT STD_LOGIC;
        prev_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        prev_out_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71 : component make_go_fast_count_appearances_Pipeline_VITIS_LOOP_31_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_start,
        ap_done => grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_done,
        ap_idle => grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_idle,
        ap_ready => grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_ready,
        appearances_address0 => grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_address0,
        appearances_ce0 => grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_ce0,
        appearances_we0 => grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_we0,
        appearances_d0 => grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_d0,
        appearances_full_n => appearances_full_n,
        appearances_write => grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_write);

    grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77 : component make_go_fast_count_appearances_Pipeline_VITIS_LOOP_36_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_start,
        ap_done => grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_done,
        ap_idle => grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_idle,
        ap_ready => grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_ready,
        bytes_dout => bytes_dout,
        bytes_num_data_valid => ap_const_lv2_0,
        bytes_fifo_cap => ap_const_lv2_0,
        bytes_empty_n => bytes_empty_n,
        bytes_read => grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_bytes_read,
        appearances_address0 => grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_appearances_address0,
        appearances_ce0 => grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_appearances_ce0,
        appearances_we0 => grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_appearances_we0,
        appearances_d0 => grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_appearances_d0,
        appearances_q0 => appearances_q0,
        appearances_full_n => ap_const_logic_0,
        appearances_write => grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_appearances_write,
        count_out => grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_count_out,
        count_out_ap_vld => grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_count_out_ap_vld,
        prev_out => grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_prev_out,
        prev_out_ap_vld => grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_prev_out_ap_vld);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((appearances_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_ready = ap_const_logic_1)) then 
                    grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_ready = ap_const_logic_1)) then 
                    grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, appearances_full_n, ap_CS_fsm_state5, grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_done, grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((appearances_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_done)
    begin
        if ((grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_done)
    begin
        if ((grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(appearances_full_n)
    begin
        if ((appearances_full_n = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_block_state1_ignore_call5_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call5 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, appearances_full_n, ap_CS_fsm_state5)
    begin
        if (((appearances_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    appearances_address0_assign_proc : process(ap_CS_fsm_state5, grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_address0, grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_appearances_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, sext_ln49_fu_94_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            appearances_address0 <= sext_ln49_fu_94_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            appearances_address0 <= grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_appearances_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            appearances_address0 <= grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_address0;
        else 
            appearances_address0 <= "XXXXXXXX";
        end if; 
    end process;


    appearances_ce0_assign_proc : process(appearances_full_n, ap_CS_fsm_state5, grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_ce0, grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_appearances_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((appearances_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            appearances_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            appearances_ce0 <= grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_appearances_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            appearances_ce0 <= grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_ce0;
        else 
            appearances_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    appearances_d0_assign_proc : process(ap_CS_fsm_state5, grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_d0, grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_appearances_d0, grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_count_out, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            appearances_d0 <= grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_count_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            appearances_d0 <= grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_appearances_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            appearances_d0 <= grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_d0;
        else 
            appearances_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    appearances_o_blk_n_assign_proc : process(appearances_full_n, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            appearances_o_blk_n <= appearances_full_n;
        else 
            appearances_o_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    appearances_read <= ap_const_logic_0;

    appearances_we0_assign_proc : process(appearances_full_n, ap_CS_fsm_state5, grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_we0, grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_appearances_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if (((appearances_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            appearances_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            appearances_we0 <= grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_appearances_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            appearances_we0 <= grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_we0;
        else 
            appearances_we0 <= ap_const_logic_0;
        end if; 
    end process;


    appearances_write_assign_proc : process(ap_CS_fsm_state1, appearances_full_n, ap_CS_fsm_state5, grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_write, ap_CS_fsm_state2)
    begin
        if (((appearances_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            appearances_write <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            appearances_write <= grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_appearances_write;
        else 
            appearances_write <= ap_const_logic_0;
        end if; 
    end process;


    bytes_read_assign_proc : process(grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_bytes_read, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            bytes_read <= grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_bytes_read;
        else 
            bytes_read <= ap_const_logic_0;
        end if; 
    end process;

    grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_start <= grp_count_appearances_Pipeline_VITIS_LOOP_31_1_fu_71_ap_start_reg;
    grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_start <= grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_ap_start_reg;

    internal_ap_ready_assign_proc : process(appearances_full_n, ap_CS_fsm_state5)
    begin
        if (((appearances_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

        sext_ln49_fu_94_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_count_appearances_Pipeline_VITIS_LOOP_36_2_fu_77_prev_out),64));

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

end behav;
