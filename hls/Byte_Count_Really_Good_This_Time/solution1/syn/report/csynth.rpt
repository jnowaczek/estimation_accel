

================================================================
== Synthesis Summary Report of 'make_go_fast'
================================================================
+ General Information: 
    * Date:           Tue Jun 27 13:52:05 2023
    * Version:        2023.1 (Build 3854077 on May  4 2023)
    * Project:        Byte_Count_Really_Good_This_Time
    * Solution:       solution1 (Vivado IP Flow Target)
    * Product family: zynq
    * Target device:  xc7z020-clg484-1
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +---------------------+------+------+---------+---------+----------+---------+------+----------+--------+----+-----------+-----------+-----+
    |       Modules       | Issue|      | Latency | Latency | Iteration|         | Trip |          |        |    |           |           |     |
    |       & Loops       | Type | Slack| (cycles)|   (ns)  |  Latency | Interval| Count| Pipelined|  BRAM  | DSP|     FF    |    LUT    | URAM|
    +---------------------+------+------+---------+---------+----------+---------+------+----------+--------+----+-----------+-----------+-----+
    |+ make_go_fast*      |     -|  0.00|       75|  375.000|         -|       76|     -|  dataflow|  4 (1%)|   -|  2262 (2%)|  2642 (4%)|    -|
    | + read_in           |     -|  0.00|       75|  375.000|         -|       75|     -|        no|       -|   -|  166 (~0%)|  140 (~0%)|    -|
    |  o VITIS_LOOP_5_1   |     -|  3.65|       73|  365.000|        11|        1|    64|       yes|       -|   -|          -|          -|    -|
    | + write_out         |     -|  0.00|       72|  360.000|         -|       72|     -|        no|       -|   -|  168 (~0%)|  162 (~0%)|    -|
    |  o VITIS_LOOP_11_1  |     -|  3.65|       70|  350.000|         8|        1|    64|       yes|       -|   -|          -|          -|    -|
    | + KPN*              |     -|  0.00|        0|    0.000|         -|        1|     -|  dataflow|       -|   -|   16 (~0%)|  296 (~0%)|    -|
    |  + worker_1         |     -|  0.00|        0|    0.000|         -|        0|     -|        no|       -|   -|    2 (~0%)|   37 (~0%)|    -|
    |  + worker_2         |     -|  0.00|        0|    0.000|         -|        0|     -|        no|       -|   -|    2 (~0%)|   37 (~0%)|    -|
    |  + worker_3         |     -|  0.00|        0|    0.000|         -|        0|     -|        no|       -|   -|    2 (~0%)|   37 (~0%)|    -|
    |  + worker_4         |     -|  0.00|        0|    0.000|         -|        0|     -|        no|       -|   -|    2 (~0%)|   37 (~0%)|    -|
    |  + worker_5         |     -|  0.00|        0|    0.000|         -|        0|     -|        no|       -|   -|    2 (~0%)|   37 (~0%)|    -|
    |  + worker_6         |     -|  0.00|        0|    0.000|         -|        0|     -|        no|       -|   -|    2 (~0%)|   37 (~0%)|    -|
    |  + worker_7         |     -|  0.00|        0|    0.000|         -|        0|     -|        no|       -|   -|    2 (~0%)|   37 (~0%)|    -|
    |  + worker           |     -|  0.00|        0|    0.000|         -|        0|     -|        no|       -|   -|    2 (~0%)|   37 (~0%)|    -|
    +---------------------+------+------+---------+---------+----------+---------+------+----------+--------+----+-----------+-----------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+-------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| Interface   | Data Width | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   | Resource Estimate |
|             | (SW->HW)   |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |                   |
+-------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+
| m_axi_gmem  | 8 -> 8     | 64            | 0       | slave  | 0        | 0         | 64           | 16           | 16          | 16          | BRAM=2            |
| m_axi_gmem0 | 8 -> 8     | 64            | 0       | slave  | 0        | 0         | 16           | 64           | 16          | 16          | BRAM=2            |
+-------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+-------------------+

* S_AXILITE Interfaces
+---------------+------------+---------------+--------+----------+
| Interface     | Data Width | Address Width | Offset | Register |
+---------------+------------+---------------+--------+----------+
| s_axi_control | 32         | 6             | 16     | 0        |
+---------------+------------+---------------+--------+----------+

* S_AXILITE Registers
+---------------+----------+--------+-------+--------+----------------------+
| Interface     | Register | Offset | Width | Access | Description          |
+---------------+----------+--------+-------+--------+----------------------+
| s_axi_control | in_r_1   | 0x10   | 32    | W      | Data signal of in_r  |
| s_axi_control | in_r_2   | 0x14   | 32    | W      | Data signal of in_r  |
| s_axi_control | out_r_1  | 0x1c   | 32    | W      | Data signal of out_r |
| s_axi_control | out_r_2  | 0x20   | 32    | W      | Data signal of out_r |
+---------------+----------+--------+-------+--------+----------------------+

* TOP LEVEL CONTROL
+-----------+------------+-----------------------------------+
| Interface | Type       | Ports                             |
+-----------+------------+-----------------------------------+
| ap_clk    | clock      | ap_clk                            |
| ap_rst_n  | reset      | ap_rst_n                          |
| ap_ctrl   | ap_ctrl_hs | ap_done ap_idle ap_ready ap_start |
+-----------+------------+-----------------------------------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+----------+-----------+-------------+
| Argument | Direction | Datatype    |
+----------+-----------+-------------+
| in       | in        | ap_uint<8>* |
| out      | out       | ap_uint<8>* |
+----------+-----------+-------------+

* SW-to-HW Mapping
+----------+---------------+-----------+----------+
| Argument | HW Interface  | HW Type   | HW Usage |
+----------+---------------+-----------+----------+
| in       | m_axi_gmem    | interface |          |
| in       | s_axi_control | interface | offset   |
| out      | m_axi_gmem0   | interface |          |
| out      | s_axi_control | interface | offset   |
+----------+---------------+-----------+----------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.

* Inferred Burst Summary
+--------------+-----------+--------+-------+-----------------+--------------------------------------------------------+
| HW Interface | Direction | Length | Width | Loop            | Loop Location                                          |
+--------------+-----------+--------+-------+-----------------+--------------------------------------------------------+
| m_axi_gmem   | read      | 64     | 8     | VITIS_LOOP_5_1  | Byte_Count_Really_Good_This_Time/accelerator.cpp:5:18  |
| m_axi_gmem0  | write     | 64     | 8     | VITIS_LOOP_11_1 | Byte_Count_Really_Good_This_Time/accelerator.cpp:11:19 |
+--------------+-----------+--------+-------+-----------------+--------------------------------------------------------+

* All M_AXI Variable Accesses
+--------------+----------+--------------------------------------------------------+-----------+--------------+--------+-----------------+--------------------------------------------------------+------------+------------------------------------------------------------------------------------------------------+
| HW Interface | Variable | Access Location                                        | Direction | Burst Status | Length | Loop            | Loop Location                                          | Resolution | Problem                                                                                              |
+--------------+----------+--------------------------------------------------------+-----------+--------------+--------+-----------------+--------------------------------------------------------+------------+------------------------------------------------------------------------------------------------------+
| m_axi_gmem   | in       | Byte_Count_Really_Good_This_Time/accelerator.cpp:6:7   | read      | Widen Fail   |        | VITIS_LOOP_5_1  | Byte_Count_Really_Good_This_Time/accelerator.cpp:5:18  | 214-353    | Could not widen since type i8 size is greater than or equal to the max_widen_bitwidth threshold of 0 |
| m_axi_gmem   | in       | Byte_Count_Really_Good_This_Time/accelerator.cpp:6:7   | read      | Inferred     | 64     | VITIS_LOOP_5_1  | Byte_Count_Really_Good_This_Time/accelerator.cpp:5:18  |            |                                                                                                      |
| m_axi_gmem0  | out      | Byte_Count_Really_Good_This_Time/accelerator.cpp:12:10 | write     | Widen Fail   |        | VITIS_LOOP_11_1 | Byte_Count_Really_Good_This_Time/accelerator.cpp:11:19 | 214-353    | Could not widen since type i8 size is greater than or equal to the max_widen_bitwidth threshold of 0 |
| m_axi_gmem0  | out      | Byte_Count_Really_Good_This_Time/accelerator.cpp:12:10 | write     | Inferred     | 64     | VITIS_LOOP_11_1 | Byte_Count_Really_Good_This_Time/accelerator.cpp:11:19 |            |                                                                                                      |
+--------------+----------+--------------------------------------------------------+-----------+--------------+--------+-----------------+--------------------------------------------------------+------------+------------------------------------------------------------------------------------------------------+

    * Resolution URL: www.xilinx.com/cgi-bin/docs/rdoc?v=2023.1;t=hls+guidance;d=XXX-YYY.html (replace XXX-YYY with column value)

================================================================
== Bind Op Report
================================================================
+-----------------------+-----+--------+----------+------+--------+---------+
| Name                  | DSP | Pragma | Variable | Op   | Impl   | Latency |
+-----------------------+-----+--------+----------+------+--------+---------+
| + make_go_fast        | 0   |        |          |      |        |         |
|   split_U             | -   |        | split_in | fifo | memory | 0       |
|   merge_U             | -   |        | merge_in | fifo | memory | 0       |
|  + read_in            | 0   |        |          |      |        |         |
|    add_ln5_fu_113_p2  | -   |        | add_ln5  | add  | fabric | 0       |
|  + write_out          | 0   |        |          |      |        |         |
|    add_ln11_fu_118_p2 | -   |        | add_ln11 | add  | fabric | 0       |
+-----------------------+-----+--------+----------+------+--------+---------+


================================================================
== Bind Storage Report
================================================================
  No bind storage info in design

================================================================
== Pragma Report
================================================================
* Pragmas with Warnings
+----------+---------+---------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Type     | Options | Location                                                            | Messages                                                                                                                                                                           |
+----------+---------+---------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| dataflow |         | Byte_Count_Really_Good_This_Time/accelerator.cpp:27 in make_go_fast | Since the only kind of statements allowed in a canonical dataflow region are variable declarations and function calls, the compiler may not be able to correctly handle the region |
+----------+---------+---------------------------------------------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

* Valid Pragma Syntax
+-----------+------------------------------------------------------------+--------------------------------------------------------------------------+
| Type      | Options                                                    | Location                                                                 |
+-----------+------------------------------------------------------------+--------------------------------------------------------------------------+
| interface | mode=m_axi max_read_burst_length=64 port=in offset=slave   | Byte_Count_Really_Good_This_Time/accelerator.cpp:23 in make_go_fast, in  |
| interface | mode=m_axi max_write_burst_length=64 port=out offset=slave | Byte_Count_Really_Good_This_Time/accelerator.cpp:24 in make_go_fast, out |
| unroll    |                                                            | Byte_Count_Really_Good_This_Time/accelerator.cpp:34 in make_go_fast      |
+-----------+------------------------------------------------------------+--------------------------------------------------------------------------+


