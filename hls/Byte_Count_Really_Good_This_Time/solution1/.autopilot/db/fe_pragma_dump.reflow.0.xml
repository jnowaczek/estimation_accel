<pragmas>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<8, false>::operator unsigned long long() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<8>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="C:/Xilinx/Vitis_HLS/2023.1/common/technology/autopilot\etc/ap_common.h" line="523" pragmaType="inline" parentfunction="ssdm_int<8, false>::ssdm_int(unsigned char)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<8, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="C:/Xilinx/Vitis_HLS/2023.1/common/technology/autopilot\hls_task.h" line="86" pragmaType="inline" parentfunction="void hls::task::operator()<void (&)(hls::stream<ap_uint<8>, 0>&, hls::stream<ap_uint<8>, 0>&), hls::stream<ap_uint<8>, 0>&, hls::stream<ap_uint<8>, 0>&>(void (&)(hls::stream<ap_uint<8>, 0>&, hls::stream<ap_uint<8>, 0>&), hls::stream<ap_uint<8>, 0>&, hls::stream<ap_uint<8>, 0>&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<8>::ap_uint()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="write" off="0" region="0" recursive="0"/>
<pragma file="Byte_Count_Really_Good_This_Time/accelerator.cpp" line="27" pragmaType="dataflow" parentfunction="make_go_fast" disable_start_propagation="0"/>
<pragma file="Byte_Count_Really_Good_This_Time/accelerator.cpp" line="34" pragmaType="unroll" parentfunction="make_go_fast" factor="-1" skip_exit_check="0"/>
<pragma file="Byte_Count_Really_Good_This_Time/accelerator.cpp" line="23" pragmaType="interface" parentfunction="make_go_fast" mode="m_axi" port="in" bundle="" offset="slave" name="" depth="-1" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="64" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="Byte_Count_Really_Good_This_Time/accelerator.cpp" line="24" pragmaType="interface" parentfunction="make_go_fast" mode="m_axi" port="out" bundle="" offset="slave" name="" depth="-1" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="64" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<8, false>::ap_int_base()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="hls::split::round_robin<ap_uint<8>, 8u, 2u, 0u>::round_robin(char const*)" off="0" region="0" recursive="0"/>
<pragma file="C:/Xilinx/Vitis_HLS/2023.1/common/technology/autopilot\etc/ap_common.h" line="0" pragmaType="inline" parentfunction="ssdm_int<8, false>::ssdm_int()" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="hls::merge::round_robin<ap_uint<8>, 8u, 2u, 0u>::round_robin(char const*)" off="0" region="0" recursive="0"/>
</pragmas>
