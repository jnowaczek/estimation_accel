--- !Passed
Pass:            reflow-pragma-conflict-handle
Name:            FunctionPragmaConflictWarn
DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2023.1/common/technology/autopilot\hls_task.h', 
                   Line: 85, Column: 0 }
Function:        _ZN3hls4taskclIRFvRNS_6streamI7ap_uintILi8EELi0EEES6_EJS6_S6_EEEvOT_DpOT0_
Args:            
  - String:          'In function '''
  - Function:        'void hls::task::operator()<void (&)(hls::stream<ap_uint<8>, 0>&, hls::stream<ap_uint<8>, 0>&), hls::stream<ap_uint<8>, 0>&, hls::stream<ap_uint<8>, 0>&>(void (&)(hls::stream<ap_uint<8>, 0>&, hls::stream<ap_uint<8>, 0>&), hls::stream<ap_uint<8>, 0>&, hls::stream<ap_uint<8>, 0>&)'
    DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2023.1/common/technology/autopilot\hls_task.h', 
                       Line: 85, Column: 0 }
  - String:          ''', '
  - String:          'Pragma conflict happens on '''
  - String:          INLINE
  - String:          ''' and '
  - String:          DATAFLOW
  - String:          ' pragmas: '
  - String:          Inline into dataflow region may break the canonical form
...
--- !Passed
Pass:            inline
Name:            AlwaysInline
DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                   Line: 35, Column: 2 }
Function:        _Z12make_go_fastP7ap_uintILi8EES1_
Args:            
  - String:          'Inlining function '''
  - Callee:          'void hls::task::operator()<void (&)(hls::stream<ap_uint<8>, 0>&, hls::stream<ap_uint<8>, 0>&), hls::stream<ap_uint<8>, 0>&, hls::stream<ap_uint<8>, 0>&>(void (&)(hls::stream<ap_uint<8>, 0>&, hls::stream<ap_uint<8>, 0>&), hls::stream<ap_uint<8>, 0>&, hls::stream<ap_uint<8>, 0>&)'
    DebugLoc:        { File: 'C:/Xilinx/Vitis_HLS/2023.1/common/technology/autopilot\hls_task.h', 
                       Line: 85, Column: 0 }
  - String:          ''' into '''
  - Caller:          'make_go_fast(ap_uint<8>*, ap_uint<8>*)'
    DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                       Line: 22, Column: 0 }
  - String:          ''''
...
--- !Passed
Pass:            reflow-pragma-loop-unroll
Name:            PragmaFullyUnroll
DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                   Line: 22, Column: 0 }
Function:        _Z12make_go_fastP7ap_uintILi8EES1_
Args:            
  - String:          'Unrolling loop '''
  - LoopName:        VITIS_LOOP_33_1
  - String:          ''' ('
  - LoopLoc:         'Byte_Count_Really_Good_This_Time/accelerator.cpp:33:19'
  - String:          ') '
  - String:          'in function '''
  - String:          make_go_fast
  - String:          ''' completely with a factor of '
  - Factor:          '8'
...
--- !Passed
Pass:            reflow-array-partition
Name:            ArrayXform
DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                   Line: 25, Column: 35 }
Function:        _Z12make_go_fastP7ap_uintILi8EES1_
Args:            
  - String:          'Applying '
  - String:          array_partition
  - String:          ' to '''
  - UOName:          split.out
  - String:          ''':'
  - String:          ' '
  - Mode:            Complete
  - String:          ' partitioning'
  - String:          ' on dimension '
  - Dim:             '1'
  - String:          .
...
--- !Passed
Pass:            reflow-array-partition
Name:            ArrayXform
DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                   Line: 26, Column: 52 }
Function:        _Z12make_go_fastP7ap_uintILi8EES1_
Args:            
  - String:          'Applying '
  - String:          array_partition
  - String:          ' to '''
  - UOName:          merge.in
  - String:          ''':'
  - String:          ' '
  - Mode:            Complete
  - String:          ' partitioning'
  - String:          ' on dimension '
  - Dim:             '1'
  - String:          .
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                   Line: 5, Column: 18 }
Function:        _Z7read_inP7ap_uintILi8EERN3hls6streamIS0_Li0EEE
Args:            
  - String:          'Sequential '
  - Direction:       read
  - String:          ' of length '
  - Length:          '64'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        in2seq
  - ArrayName:       in
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_5_1
  - String:          ' '
  - LoopLoc:         'Byte_Count_Really_Good_This_Time/accelerator.cpp:5:18'
  - String:          ' '
  - Function:        'read_in(ap_uint<8>*, hls::stream<ap_uint<8>, 0>&)'
    DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                       Line: 4, Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      load
    DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                       Line: 6, Column: 7 }
  - OrigDirection:   read
  - OrigID:          for.inc.load.4
...
--- !Passed
Pass:            reflow-burst-inference
Name:            BurstInferred
DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                   Line: 11, Column: 19 }
Function:        _Z9write_outRN3hls6streamI7ap_uintILi8EELi0EEEPS2_
Args:            
  - String:          'Sequential '
  - Direction:       write
  - String:          ' of length '
  - Length:          '64'
  - String:          ' has been inferred'
  - String:          ' _XLX_SEP_ '
  - AccessID:        out2seq
  - ArrayName:       out
  - String:          ' '
  - BundleName:      gmem0
  - String:          ' '
  - LoopName:        VITIS_LOOP_11_1
  - String:          ' '
  - LoopLoc:         'Byte_Count_Really_Good_This_Time/accelerator.cpp:11:19'
  - String:          ' '
  - Function:        'write_out(hls::stream<ap_uint<8>, 0>&, ap_uint<8>*)'
    DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                       Line: 10, Column: 0 }
  - String:          ' '
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      store
    DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                       Line: 12, Column: 10 }
  - OrigDirection:   write
  - OrigID:          for.inc.store.5
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                   Line: 5, Column: 18 }
Function:        _Z7read_inP7ap_uintILi8EERN3hls6streamIS0_Li0EEE
Args:            
  - String:          'Could not widen since type '
  - Type:            i8
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                       Line: 5, Column: 18 }
  - OrigDirection:   read
  - OrigID:          in2seq
  - ArrayName:       in
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_5_1
  - String:          ' '
  - LoopLoc:         'Byte_Count_Really_Good_This_Time/accelerator.cpp:5:18'
  - String:          ' '
  - Function:        'read_in(ap_uint<8>*, hls::stream<ap_uint<8>, 0>&)'
    DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                       Line: 4, Column: 0 }
  - String:          ' '
...
--- !Missed
Pass:            reflow-burst-widen
Name:            GreaterOrEqualThreshold
DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                   Line: 11, Column: 19 }
Function:        _Z9write_outRN3hls6streamI7ap_uintILi8EELi0EEEPS2_
Args:            
  - String:          'Could not widen since type '
  - Type:            i8
  - String:          ' size is greater than or equal to the max_widen_bitwidth threshold of '
  - Threshold:       '0'
  - String:          ' _XLX_SEP_ '
  - OrigAccess:      call
    DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                       Line: 11, Column: 19 }
  - OrigDirection:   write
  - OrigID:          out2seq
  - ArrayName:       out
  - String:          ' '
  - BundleName:      gmem0
  - String:          ' '
  - LoopName:        VITIS_LOOP_11_1
  - String:          ' '
  - LoopLoc:         'Byte_Count_Really_Good_This_Time/accelerator.cpp:11:19'
  - String:          ' '
  - Function:        'write_out(hls::stream<ap_uint<8>, 0>&, ap_uint<8>*)'
    DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                       Line: 10, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                   Line: 5, Column: 18 }
Function:        _Z7read_inP7ap_uintILi8EERN3hls6streamIS0_Li0EEE.1
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '64'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      gmem
  - String:          ' '
  - LoopName:        VITIS_LOOP_5_1
  - String:          ' '
  - LoopLoc:         'Byte_Count_Really_Good_This_Time/accelerator.cpp:5:18'
  - String:          ' '
  - Function:        'read_in(ap_uint<8>*, hls::stream<ap_uint<8>, 0>&) (.1)'
    DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                       Line: 4, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                   Line: 5, Column: 18 }
Function:        _Z7read_inP7ap_uintILi8EERN3hls6streamIS0_Li0EEE.1
Args:            
  - String:          'Multiple burst '
  - Direction:       reads
  - String:          ' of length '
  - Length:          '64'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' in loop '''
  - LoopName:        VITIS_LOOP_5_1
  - String:          '''('
  - LoopLoc:         'Byte_Count_Really_Good_This_Time/accelerator.cpp:5:18'
  - String:          ')'
  - String:          ' has been inferred on bundle '''
  - BundleName:      gmem
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredVerboseSummary
DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                   Line: 11, Column: 19 }
Function:        _Z9write_outRN3hls6streamI7ap_uintILi8EELi0EEEPS2_.1
Args:            
  - String:          'Multiple burst '
  - Direction:       writes
  - String:          ' of length '
  - Length:          '64'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' has been inferred.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
  - String:          ' _XLX_SEP_ '
  - AccessID:        seq
  - ArrayName:       ''
  - String:          ' '
  - BundleName:      gmem0
  - String:          ' '
  - LoopName:        VITIS_LOOP_11_1
  - String:          ' '
  - LoopLoc:         'Byte_Count_Really_Good_This_Time/accelerator.cpp:11:19'
  - String:          ' '
  - Function:        'write_out(hls::stream<ap_uint<8>, 0>&, ap_uint<8>*) (.1)'
    DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                       Line: 10, Column: 0 }
  - String:          ' '
...
--- !Passed
Pass:            reflow-burst-summary
Name:            BurstInferredSummary
DebugLoc:        { File: Byte_Count_Really_Good_This_Time/accelerator.cpp, 
                   Line: 11, Column: 19 }
Function:        _Z9write_outRN3hls6streamI7ap_uintILi8EELi0EEEPS2_.1
Args:            
  - String:          'Multiple burst '
  - Direction:       writes
  - String:          ' of length '
  - Length:          '64'
  - String:          ' and bit width '
  - Width:           '8'
  - String:          ' in loop '''
  - LoopName:        VITIS_LOOP_11_1
  - String:          '''('
  - LoopLoc:         'Byte_Count_Really_Good_This_Time/accelerator.cpp:11:19'
  - String:          ')'
  - String:          ' has been inferred on bundle '''
  - BundleName:      gmem0
  - String:          '''.'
  - String:          ' These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.'
...
