// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="byte_count_byte_count,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010i-clg225-1L,HLS_INPUT_CLOCK=6.800000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=4.964000,HLS_SYN_LAT=658,HLS_SYN_TPT=391,HLS_SYN_MEM=24,HLS_SYN_DSP=0,HLS_SYN_FF=6346,HLS_SYN_LUT=28024,HLS_VERSION=2022_1}" *)

module byte_count (
        ap_clk,
        ap_rst_n,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 512;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (512 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;

 reg    ap_rst_n_inv;
wire   [7:0] input0_i_q0;
wire   [7:0] input0_t_q0;
wire   [7:0] input1_i_q0;
wire   [7:0] input1_t_q0;
wire   [7:0] input2_i_q0;
wire   [7:0] input2_t_q0;
wire   [7:0] input3_i_q0;
wire   [7:0] input3_t_q0;
wire   [31:0] appearances0_i_q0;
wire   [31:0] appearances0_i_q1;
wire   [31:0] appearances0_t_q0;
wire   [31:0] appearances0_t_q1;
wire   [31:0] appearances1_i_q0;
wire   [31:0] appearances1_i_q1;
wire   [31:0] appearances1_t_q0;
wire   [31:0] appearances1_t_q1;
wire   [31:0] appearances2_i_q0;
wire   [31:0] appearances2_i_q1;
wire   [31:0] appearances2_t_q0;
wire   [31:0] appearances2_t_q1;
wire   [31:0] appearances3_i_q0;
wire   [31:0] appearances3_i_q1;
wire   [31:0] appearances3_t_q0;
wire   [31:0] appearances3_t_q1;
wire   [31:0] combined_appearances_i_q0;
wire   [31:0] combined_appearances_i_q1;
wire   [31:0] combined_appearances_t_q0;
wire   [31:0] combined_appearances_t_q1;
wire   [63:0] input_r;
wire    gmem_AWREADY;
wire    gmem_WREADY;
wire    gmem_ARREADY;
wire    gmem_RVALID;
wire   [511:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [9:0] gmem_RFIFONUM;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
wire    split_U0_ap_start;
wire    split_U0_ap_done;
wire    split_U0_ap_continue;
wire    split_U0_ap_idle;
wire    split_U0_ap_ready;
wire    split_U0_m_axi_gmem_AWVALID;
wire   [63:0] split_U0_m_axi_gmem_AWADDR;
wire   [0:0] split_U0_m_axi_gmem_AWID;
wire   [31:0] split_U0_m_axi_gmem_AWLEN;
wire   [2:0] split_U0_m_axi_gmem_AWSIZE;
wire   [1:0] split_U0_m_axi_gmem_AWBURST;
wire   [1:0] split_U0_m_axi_gmem_AWLOCK;
wire   [3:0] split_U0_m_axi_gmem_AWCACHE;
wire   [2:0] split_U0_m_axi_gmem_AWPROT;
wire   [3:0] split_U0_m_axi_gmem_AWQOS;
wire   [3:0] split_U0_m_axi_gmem_AWREGION;
wire   [0:0] split_U0_m_axi_gmem_AWUSER;
wire    split_U0_m_axi_gmem_WVALID;
wire   [511:0] split_U0_m_axi_gmem_WDATA;
wire   [63:0] split_U0_m_axi_gmem_WSTRB;
wire    split_U0_m_axi_gmem_WLAST;
wire   [0:0] split_U0_m_axi_gmem_WID;
wire   [0:0] split_U0_m_axi_gmem_WUSER;
wire    split_U0_m_axi_gmem_ARVALID;
wire   [63:0] split_U0_m_axi_gmem_ARADDR;
wire   [0:0] split_U0_m_axi_gmem_ARID;
wire   [31:0] split_U0_m_axi_gmem_ARLEN;
wire   [2:0] split_U0_m_axi_gmem_ARSIZE;
wire   [1:0] split_U0_m_axi_gmem_ARBURST;
wire   [1:0] split_U0_m_axi_gmem_ARLOCK;
wire   [3:0] split_U0_m_axi_gmem_ARCACHE;
wire   [2:0] split_U0_m_axi_gmem_ARPROT;
wire   [3:0] split_U0_m_axi_gmem_ARQOS;
wire   [3:0] split_U0_m_axi_gmem_ARREGION;
wire   [0:0] split_U0_m_axi_gmem_ARUSER;
wire    split_U0_m_axi_gmem_RREADY;
wire    split_U0_m_axi_gmem_BREADY;
wire   [7:0] split_U0_output0_address0;
wire    split_U0_output0_ce0;
wire    split_U0_output0_we0;
wire   [7:0] split_U0_output0_d0;
wire   [7:0] split_U0_output1_address0;
wire    split_U0_output1_ce0;
wire    split_U0_output1_we0;
wire   [7:0] split_U0_output1_d0;
wire   [7:0] split_U0_output2_address0;
wire    split_U0_output2_ce0;
wire    split_U0_output2_we0;
wire   [7:0] split_U0_output2_d0;
wire   [7:0] split_U0_output3_address0;
wire    split_U0_output3_ce0;
wire    split_U0_output3_we0;
wire   [7:0] split_U0_output3_d0;
wire    ap_channel_done_input3;
wire    split_U0_output3_full_n;
reg    ap_sync_reg_channel_write_input3;
wire    ap_sync_channel_write_input3;
wire    ap_channel_done_input2;
wire    split_U0_output2_full_n;
reg    ap_sync_reg_channel_write_input2;
wire    ap_sync_channel_write_input2;
wire    ap_channel_done_input1;
wire    split_U0_output1_full_n;
reg    ap_sync_reg_channel_write_input1;
wire    ap_sync_channel_write_input1;
wire    ap_channel_done_input0;
wire    split_U0_output0_full_n;
reg    ap_sync_reg_channel_write_input0;
wire    ap_sync_channel_write_input0;
wire    count_appearances_1_U0_ap_start;
wire    count_appearances_1_U0_ap_done;
wire    count_appearances_1_U0_ap_continue;
wire    count_appearances_1_U0_ap_idle;
wire    count_appearances_1_U0_ap_ready;
wire   [7:0] count_appearances_1_U0_input_r_address0;
wire    count_appearances_1_U0_input_r_ce0;
wire   [7:0] count_appearances_1_U0_appearances_address0;
wire    count_appearances_1_U0_appearances_ce0;
wire    count_appearances_1_U0_appearances_we0;
wire   [31:0] count_appearances_1_U0_appearances_d0;
wire   [7:0] count_appearances_1_U0_appearances_address1;
wire    count_appearances_1_U0_appearances_ce1;
wire    count_appearances_1_U0_appearances_we1;
wire   [31:0] count_appearances_1_U0_appearances_d1;
wire    count_appearances_2_U0_ap_start;
wire    count_appearances_2_U0_ap_done;
wire    count_appearances_2_U0_ap_continue;
wire    count_appearances_2_U0_ap_idle;
wire    count_appearances_2_U0_ap_ready;
wire   [7:0] count_appearances_2_U0_input_r_address0;
wire    count_appearances_2_U0_input_r_ce0;
wire   [7:0] count_appearances_2_U0_appearances_address0;
wire    count_appearances_2_U0_appearances_ce0;
wire    count_appearances_2_U0_appearances_we0;
wire   [31:0] count_appearances_2_U0_appearances_d0;
wire   [7:0] count_appearances_2_U0_appearances_address1;
wire    count_appearances_2_U0_appearances_ce1;
wire    count_appearances_2_U0_appearances_we1;
wire   [31:0] count_appearances_2_U0_appearances_d1;
wire    count_appearances_3_U0_ap_start;
wire    count_appearances_3_U0_ap_done;
wire    count_appearances_3_U0_ap_continue;
wire    count_appearances_3_U0_ap_idle;
wire    count_appearances_3_U0_ap_ready;
wire   [7:0] count_appearances_3_U0_input_r_address0;
wire    count_appearances_3_U0_input_r_ce0;
wire   [7:0] count_appearances_3_U0_appearances_address0;
wire    count_appearances_3_U0_appearances_ce0;
wire    count_appearances_3_U0_appearances_we0;
wire   [31:0] count_appearances_3_U0_appearances_d0;
wire   [7:0] count_appearances_3_U0_appearances_address1;
wire    count_appearances_3_U0_appearances_ce1;
wire    count_appearances_3_U0_appearances_we1;
wire   [31:0] count_appearances_3_U0_appearances_d1;
wire    count_appearances_U0_ap_start;
wire    count_appearances_U0_ap_done;
wire    count_appearances_U0_ap_continue;
wire    count_appearances_U0_ap_idle;
wire    count_appearances_U0_ap_ready;
wire   [7:0] count_appearances_U0_input_r_address0;
wire    count_appearances_U0_input_r_ce0;
wire   [7:0] count_appearances_U0_appearances_address0;
wire    count_appearances_U0_appearances_ce0;
wire    count_appearances_U0_appearances_we0;
wire   [31:0] count_appearances_U0_appearances_d0;
wire   [7:0] count_appearances_U0_appearances_address1;
wire    count_appearances_U0_appearances_ce1;
wire    count_appearances_U0_appearances_we1;
wire   [31:0] count_appearances_U0_appearances_d1;
wire    reduce_appearances_U0_ap_start;
wire    reduce_appearances_U0_ap_done;
wire    reduce_appearances_U0_ap_continue;
wire    reduce_appearances_U0_ap_idle;
wire    reduce_appearances_U0_ap_ready;
wire   [7:0] reduce_appearances_U0_appearances0_address0;
wire    reduce_appearances_U0_appearances0_ce0;
wire   [7:0] reduce_appearances_U0_appearances0_address1;
wire    reduce_appearances_U0_appearances0_ce1;
wire   [7:0] reduce_appearances_U0_appearances1_address0;
wire    reduce_appearances_U0_appearances1_ce0;
wire   [7:0] reduce_appearances_U0_appearances1_address1;
wire    reduce_appearances_U0_appearances1_ce1;
wire   [7:0] reduce_appearances_U0_appearances2_address0;
wire    reduce_appearances_U0_appearances2_ce0;
wire   [7:0] reduce_appearances_U0_appearances2_address1;
wire    reduce_appearances_U0_appearances2_ce1;
wire   [7:0] reduce_appearances_U0_appearances3_address0;
wire    reduce_appearances_U0_appearances3_ce0;
wire   [7:0] reduce_appearances_U0_appearances3_address1;
wire    reduce_appearances_U0_appearances3_ce1;
wire   [7:0] reduce_appearances_U0_combined_apperances_address0;
wire    reduce_appearances_U0_combined_apperances_ce0;
wire    reduce_appearances_U0_combined_apperances_we0;
wire   [31:0] reduce_appearances_U0_combined_apperances_d0;
wire   [7:0] reduce_appearances_U0_combined_apperances_address1;
wire    reduce_appearances_U0_combined_apperances_ce1;
wire    reduce_appearances_U0_combined_apperances_we1;
wire   [31:0] reduce_appearances_U0_combined_apperances_d1;
wire    count_threshold_U0_ap_start;
wire    count_threshold_U0_ap_done;
wire    count_threshold_U0_ap_continue;
wire    count_threshold_U0_ap_idle;
wire    count_threshold_U0_ap_ready;
wire   [7:0] count_threshold_U0_appearances_address0;
wire    count_threshold_U0_appearances_ce0;
wire   [7:0] count_threshold_U0_appearances_address1;
wire    count_threshold_U0_appearances_ce1;
wire   [31:0] count_threshold_U0_out_r;
wire    count_threshold_U0_out_r_ap_vld;
wire    input0_i_full_n;
wire    input0_t_empty_n;
wire    input1_i_full_n;
wire    input1_t_empty_n;
wire    input2_i_full_n;
wire    input2_t_empty_n;
wire    input3_i_full_n;
wire    input3_t_empty_n;
wire    appearances0_i_full_n;
wire    appearances0_t_empty_n;
wire    appearances1_i_full_n;
wire    appearances1_t_empty_n;
wire    appearances2_i_full_n;
wire    appearances2_t_empty_n;
wire    appearances3_i_full_n;
wire    appearances3_t_empty_n;
wire    combined_appearances_i_full_n;
wire    combined_appearances_t_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_input3 = 1'b0;
#0 ap_sync_reg_channel_write_input2 = 1'b0;
#0 ap_sync_reg_channel_write_input1 = 1'b0;
#0 ap_sync_reg_channel_write_input0 = 1'b0;
end

byte_count_input0_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
input0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(split_U0_output0_address0),
    .i_ce0(split_U0_output0_ce0),
    .i_we0(split_U0_output0_we0),
    .i_d0(split_U0_output0_d0),
    .i_q0(input0_i_q0),
    .t_address0(count_appearances_1_U0_input_r_address0),
    .t_ce0(count_appearances_1_U0_input_r_ce0),
    .t_we0(1'b0),
    .t_d0(8'd0),
    .t_q0(input0_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(input0_i_full_n),
    .i_write(ap_channel_done_input0),
    .t_empty_n(input0_t_empty_n),
    .t_read(count_appearances_1_U0_ap_ready)
);

byte_count_input0_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
input1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(split_U0_output1_address0),
    .i_ce0(split_U0_output1_ce0),
    .i_we0(split_U0_output1_we0),
    .i_d0(split_U0_output1_d0),
    .i_q0(input1_i_q0),
    .t_address0(count_appearances_2_U0_input_r_address0),
    .t_ce0(count_appearances_2_U0_input_r_ce0),
    .t_we0(1'b0),
    .t_d0(8'd0),
    .t_q0(input1_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(input1_i_full_n),
    .i_write(ap_channel_done_input1),
    .t_empty_n(input1_t_empty_n),
    .t_read(count_appearances_2_U0_ap_ready)
);

byte_count_input0_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
input2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(split_U0_output2_address0),
    .i_ce0(split_U0_output2_ce0),
    .i_we0(split_U0_output2_we0),
    .i_d0(split_U0_output2_d0),
    .i_q0(input2_i_q0),
    .t_address0(count_appearances_3_U0_input_r_address0),
    .t_ce0(count_appearances_3_U0_input_r_ce0),
    .t_we0(1'b0),
    .t_d0(8'd0),
    .t_q0(input2_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(input2_i_full_n),
    .i_write(ap_channel_done_input2),
    .t_empty_n(input2_t_empty_n),
    .t_read(count_appearances_3_U0_ap_ready)
);

byte_count_input0_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
input3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(split_U0_output3_address0),
    .i_ce0(split_U0_output3_ce0),
    .i_we0(split_U0_output3_we0),
    .i_d0(split_U0_output3_d0),
    .i_q0(input3_i_q0),
    .t_address0(count_appearances_U0_input_r_address0),
    .t_ce0(count_appearances_U0_input_r_ce0),
    .t_we0(1'b0),
    .t_d0(8'd0),
    .t_q0(input3_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(input3_i_full_n),
    .i_write(ap_channel_done_input3),
    .t_empty_n(input3_t_empty_n),
    .t_read(count_appearances_U0_ap_ready)
);

byte_count_appearances0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
appearances0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(count_appearances_1_U0_appearances_address0),
    .i_ce0(count_appearances_1_U0_appearances_ce0),
    .i_we0(count_appearances_1_U0_appearances_we0),
    .i_d0(count_appearances_1_U0_appearances_d0),
    .i_q0(appearances0_i_q0),
    .i_address1(count_appearances_1_U0_appearances_address1),
    .i_ce1(count_appearances_1_U0_appearances_ce1),
    .i_we1(count_appearances_1_U0_appearances_we1),
    .i_d1(count_appearances_1_U0_appearances_d1),
    .i_q1(appearances0_i_q1),
    .t_address0(reduce_appearances_U0_appearances0_address0),
    .t_ce0(reduce_appearances_U0_appearances0_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(appearances0_t_q0),
    .t_address1(reduce_appearances_U0_appearances0_address1),
    .t_ce1(reduce_appearances_U0_appearances0_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(appearances0_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(appearances0_i_full_n),
    .i_write(count_appearances_1_U0_ap_done),
    .t_empty_n(appearances0_t_empty_n),
    .t_read(reduce_appearances_U0_ap_ready)
);

byte_count_appearances0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
appearances1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(count_appearances_2_U0_appearances_address0),
    .i_ce0(count_appearances_2_U0_appearances_ce0),
    .i_we0(count_appearances_2_U0_appearances_we0),
    .i_d0(count_appearances_2_U0_appearances_d0),
    .i_q0(appearances1_i_q0),
    .i_address1(count_appearances_2_U0_appearances_address1),
    .i_ce1(count_appearances_2_U0_appearances_ce1),
    .i_we1(count_appearances_2_U0_appearances_we1),
    .i_d1(count_appearances_2_U0_appearances_d1),
    .i_q1(appearances1_i_q1),
    .t_address0(reduce_appearances_U0_appearances1_address0),
    .t_ce0(reduce_appearances_U0_appearances1_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(appearances1_t_q0),
    .t_address1(reduce_appearances_U0_appearances1_address1),
    .t_ce1(reduce_appearances_U0_appearances1_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(appearances1_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(appearances1_i_full_n),
    .i_write(count_appearances_2_U0_ap_done),
    .t_empty_n(appearances1_t_empty_n),
    .t_read(reduce_appearances_U0_ap_ready)
);

byte_count_appearances0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
appearances2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(count_appearances_3_U0_appearances_address0),
    .i_ce0(count_appearances_3_U0_appearances_ce0),
    .i_we0(count_appearances_3_U0_appearances_we0),
    .i_d0(count_appearances_3_U0_appearances_d0),
    .i_q0(appearances2_i_q0),
    .i_address1(count_appearances_3_U0_appearances_address1),
    .i_ce1(count_appearances_3_U0_appearances_ce1),
    .i_we1(count_appearances_3_U0_appearances_we1),
    .i_d1(count_appearances_3_U0_appearances_d1),
    .i_q1(appearances2_i_q1),
    .t_address0(reduce_appearances_U0_appearances2_address0),
    .t_ce0(reduce_appearances_U0_appearances2_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(appearances2_t_q0),
    .t_address1(reduce_appearances_U0_appearances2_address1),
    .t_ce1(reduce_appearances_U0_appearances2_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(appearances2_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(appearances2_i_full_n),
    .i_write(count_appearances_3_U0_ap_done),
    .t_empty_n(appearances2_t_empty_n),
    .t_read(reduce_appearances_U0_ap_ready)
);

byte_count_appearances0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
appearances3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(count_appearances_U0_appearances_address0),
    .i_ce0(count_appearances_U0_appearances_ce0),
    .i_we0(count_appearances_U0_appearances_we0),
    .i_d0(count_appearances_U0_appearances_d0),
    .i_q0(appearances3_i_q0),
    .i_address1(count_appearances_U0_appearances_address1),
    .i_ce1(count_appearances_U0_appearances_ce1),
    .i_we1(count_appearances_U0_appearances_we1),
    .i_d1(count_appearances_U0_appearances_d1),
    .i_q1(appearances3_i_q1),
    .t_address0(reduce_appearances_U0_appearances3_address0),
    .t_ce0(reduce_appearances_U0_appearances3_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(appearances3_t_q0),
    .t_address1(reduce_appearances_U0_appearances3_address1),
    .t_ce1(reduce_appearances_U0_appearances3_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(appearances3_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(appearances3_i_full_n),
    .i_write(count_appearances_U0_ap_done),
    .t_empty_n(appearances3_t_empty_n),
    .t_read(reduce_appearances_U0_ap_ready)
);

byte_count_appearances0_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
combined_appearances_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .i_address0(reduce_appearances_U0_combined_apperances_address0),
    .i_ce0(reduce_appearances_U0_combined_apperances_ce0),
    .i_we0(reduce_appearances_U0_combined_apperances_we0),
    .i_d0(reduce_appearances_U0_combined_apperances_d0),
    .i_q0(combined_appearances_i_q0),
    .i_address1(reduce_appearances_U0_combined_apperances_address1),
    .i_ce1(reduce_appearances_U0_combined_apperances_ce1),
    .i_we1(reduce_appearances_U0_combined_apperances_we1),
    .i_d1(reduce_appearances_U0_combined_apperances_d1),
    .i_q1(combined_appearances_i_q1),
    .t_address0(count_threshold_U0_appearances_address0),
    .t_ce0(count_threshold_U0_appearances_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(combined_appearances_t_q0),
    .t_address1(count_threshold_U0_appearances_address1),
    .t_ce1(count_threshold_U0_appearances_ce1),
    .t_we1(1'b0),
    .t_d1(32'd0),
    .t_q1(combined_appearances_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(combined_appearances_i_full_n),
    .i_write(reduce_appearances_U0_ap_done),
    .t_empty_n(combined_appearances_t_empty_n),
    .t_read(count_threshold_U0_ap_ready)
);

byte_count_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .input_r(input_r),
    .out_r(count_threshold_U0_out_r),
    .out_r_ap_vld(count_threshold_U0_out_r_ap_vld)
);

byte_count_gmem_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 2 ),
    .NUM_WRITE_OUTSTANDING( 1 ),
    .MAX_READ_BURST_LENGTH( 256 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .USER_RFIFONUM_WIDTH( 10 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ),
    .USER_DW( 512 ),
    .USER_AW( 64 ))
gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(split_U0_m_axi_gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(split_U0_m_axi_gmem_ARADDR),
    .I_ARLEN(split_U0_m_axi_gmem_ARLEN),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(split_U0_m_axi_gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RFIFONUM(gmem_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(512'd0),
    .I_WSTRB(64'd0),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(1'b0)
);

byte_count_split split_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(split_U0_ap_start),
    .ap_done(split_U0_ap_done),
    .ap_continue(split_U0_ap_continue),
    .ap_idle(split_U0_ap_idle),
    .ap_ready(split_U0_ap_ready),
    .m_axi_gmem_AWVALID(split_U0_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(split_U0_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(split_U0_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(split_U0_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(split_U0_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(split_U0_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(split_U0_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(split_U0_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(split_U0_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(split_U0_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(split_U0_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(split_U0_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(split_U0_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(split_U0_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(split_U0_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(split_U0_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(split_U0_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(split_U0_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(split_U0_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(gmem_ARREADY),
    .m_axi_gmem_ARADDR(split_U0_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(split_U0_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(split_U0_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(split_U0_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(split_U0_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(split_U0_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(split_U0_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(split_U0_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(split_U0_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(split_U0_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(split_U0_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(gmem_RVALID),
    .m_axi_gmem_RREADY(split_U0_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(gmem_RDATA),
    .m_axi_gmem_RLAST(gmem_RLAST),
    .m_axi_gmem_RID(gmem_RID),
    .m_axi_gmem_RFIFONUM(gmem_RFIFONUM),
    .m_axi_gmem_RUSER(gmem_RUSER),
    .m_axi_gmem_RRESP(gmem_RRESP),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(split_U0_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .input_r(input_r),
    .output0_address0(split_U0_output0_address0),
    .output0_ce0(split_U0_output0_ce0),
    .output0_we0(split_U0_output0_we0),
    .output0_d0(split_U0_output0_d0),
    .output1_address0(split_U0_output1_address0),
    .output1_ce0(split_U0_output1_ce0),
    .output1_we0(split_U0_output1_we0),
    .output1_d0(split_U0_output1_d0),
    .output2_address0(split_U0_output2_address0),
    .output2_ce0(split_U0_output2_ce0),
    .output2_we0(split_U0_output2_we0),
    .output2_d0(split_U0_output2_d0),
    .output3_address0(split_U0_output3_address0),
    .output3_ce0(split_U0_output3_ce0),
    .output3_we0(split_U0_output3_we0),
    .output3_d0(split_U0_output3_d0)
);

byte_count_count_appearances_1 count_appearances_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(count_appearances_1_U0_ap_start),
    .ap_done(count_appearances_1_U0_ap_done),
    .ap_continue(count_appearances_1_U0_ap_continue),
    .ap_idle(count_appearances_1_U0_ap_idle),
    .ap_ready(count_appearances_1_U0_ap_ready),
    .input_r_address0(count_appearances_1_U0_input_r_address0),
    .input_r_ce0(count_appearances_1_U0_input_r_ce0),
    .input_r_q0(input0_t_q0),
    .appearances_address0(count_appearances_1_U0_appearances_address0),
    .appearances_ce0(count_appearances_1_U0_appearances_ce0),
    .appearances_we0(count_appearances_1_U0_appearances_we0),
    .appearances_d0(count_appearances_1_U0_appearances_d0),
    .appearances_address1(count_appearances_1_U0_appearances_address1),
    .appearances_ce1(count_appearances_1_U0_appearances_ce1),
    .appearances_we1(count_appearances_1_U0_appearances_we1),
    .appearances_d1(count_appearances_1_U0_appearances_d1),
    .appearances_q1(appearances0_i_q1)
);

byte_count_count_appearances_2 count_appearances_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(count_appearances_2_U0_ap_start),
    .ap_done(count_appearances_2_U0_ap_done),
    .ap_continue(count_appearances_2_U0_ap_continue),
    .ap_idle(count_appearances_2_U0_ap_idle),
    .ap_ready(count_appearances_2_U0_ap_ready),
    .input_r_address0(count_appearances_2_U0_input_r_address0),
    .input_r_ce0(count_appearances_2_U0_input_r_ce0),
    .input_r_q0(input1_t_q0),
    .appearances_address0(count_appearances_2_U0_appearances_address0),
    .appearances_ce0(count_appearances_2_U0_appearances_ce0),
    .appearances_we0(count_appearances_2_U0_appearances_we0),
    .appearances_d0(count_appearances_2_U0_appearances_d0),
    .appearances_address1(count_appearances_2_U0_appearances_address1),
    .appearances_ce1(count_appearances_2_U0_appearances_ce1),
    .appearances_we1(count_appearances_2_U0_appearances_we1),
    .appearances_d1(count_appearances_2_U0_appearances_d1),
    .appearances_q1(appearances1_i_q1)
);

byte_count_count_appearances_3 count_appearances_3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(count_appearances_3_U0_ap_start),
    .ap_done(count_appearances_3_U0_ap_done),
    .ap_continue(count_appearances_3_U0_ap_continue),
    .ap_idle(count_appearances_3_U0_ap_idle),
    .ap_ready(count_appearances_3_U0_ap_ready),
    .input_r_address0(count_appearances_3_U0_input_r_address0),
    .input_r_ce0(count_appearances_3_U0_input_r_ce0),
    .input_r_q0(input2_t_q0),
    .appearances_address0(count_appearances_3_U0_appearances_address0),
    .appearances_ce0(count_appearances_3_U0_appearances_ce0),
    .appearances_we0(count_appearances_3_U0_appearances_we0),
    .appearances_d0(count_appearances_3_U0_appearances_d0),
    .appearances_address1(count_appearances_3_U0_appearances_address1),
    .appearances_ce1(count_appearances_3_U0_appearances_ce1),
    .appearances_we1(count_appearances_3_U0_appearances_we1),
    .appearances_d1(count_appearances_3_U0_appearances_d1),
    .appearances_q1(appearances2_i_q1)
);

byte_count_count_appearances count_appearances_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(count_appearances_U0_ap_start),
    .ap_done(count_appearances_U0_ap_done),
    .ap_continue(count_appearances_U0_ap_continue),
    .ap_idle(count_appearances_U0_ap_idle),
    .ap_ready(count_appearances_U0_ap_ready),
    .input_r_address0(count_appearances_U0_input_r_address0),
    .input_r_ce0(count_appearances_U0_input_r_ce0),
    .input_r_q0(input3_t_q0),
    .appearances_address0(count_appearances_U0_appearances_address0),
    .appearances_ce0(count_appearances_U0_appearances_ce0),
    .appearances_we0(count_appearances_U0_appearances_we0),
    .appearances_d0(count_appearances_U0_appearances_d0),
    .appearances_address1(count_appearances_U0_appearances_address1),
    .appearances_ce1(count_appearances_U0_appearances_ce1),
    .appearances_we1(count_appearances_U0_appearances_we1),
    .appearances_d1(count_appearances_U0_appearances_d1),
    .appearances_q1(appearances3_i_q1)
);

byte_count_reduce_appearances reduce_appearances_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(reduce_appearances_U0_ap_start),
    .ap_done(reduce_appearances_U0_ap_done),
    .ap_continue(reduce_appearances_U0_ap_continue),
    .ap_idle(reduce_appearances_U0_ap_idle),
    .ap_ready(reduce_appearances_U0_ap_ready),
    .appearances0_address0(reduce_appearances_U0_appearances0_address0),
    .appearances0_ce0(reduce_appearances_U0_appearances0_ce0),
    .appearances0_q0(appearances0_t_q0),
    .appearances0_address1(reduce_appearances_U0_appearances0_address1),
    .appearances0_ce1(reduce_appearances_U0_appearances0_ce1),
    .appearances0_q1(appearances0_t_q1),
    .appearances1_address0(reduce_appearances_U0_appearances1_address0),
    .appearances1_ce0(reduce_appearances_U0_appearances1_ce0),
    .appearances1_q0(appearances1_t_q0),
    .appearances1_address1(reduce_appearances_U0_appearances1_address1),
    .appearances1_ce1(reduce_appearances_U0_appearances1_ce1),
    .appearances1_q1(appearances1_t_q1),
    .appearances2_address0(reduce_appearances_U0_appearances2_address0),
    .appearances2_ce0(reduce_appearances_U0_appearances2_ce0),
    .appearances2_q0(appearances2_t_q0),
    .appearances2_address1(reduce_appearances_U0_appearances2_address1),
    .appearances2_ce1(reduce_appearances_U0_appearances2_ce1),
    .appearances2_q1(appearances2_t_q1),
    .appearances3_address0(reduce_appearances_U0_appearances3_address0),
    .appearances3_ce0(reduce_appearances_U0_appearances3_ce0),
    .appearances3_q0(appearances3_t_q0),
    .appearances3_address1(reduce_appearances_U0_appearances3_address1),
    .appearances3_ce1(reduce_appearances_U0_appearances3_ce1),
    .appearances3_q1(appearances3_t_q1),
    .combined_apperances_address0(reduce_appearances_U0_combined_apperances_address0),
    .combined_apperances_ce0(reduce_appearances_U0_combined_apperances_ce0),
    .combined_apperances_we0(reduce_appearances_U0_combined_apperances_we0),
    .combined_apperances_d0(reduce_appearances_U0_combined_apperances_d0),
    .combined_apperances_address1(reduce_appearances_U0_combined_apperances_address1),
    .combined_apperances_ce1(reduce_appearances_U0_combined_apperances_ce1),
    .combined_apperances_we1(reduce_appearances_U0_combined_apperances_we1),
    .combined_apperances_d1(reduce_appearances_U0_combined_apperances_d1)
);

byte_count_count_threshold count_threshold_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(count_threshold_U0_ap_start),
    .ap_done(count_threshold_U0_ap_done),
    .ap_continue(count_threshold_U0_ap_continue),
    .ap_idle(count_threshold_U0_ap_idle),
    .ap_ready(count_threshold_U0_ap_ready),
    .appearances_address0(count_threshold_U0_appearances_address0),
    .appearances_ce0(count_threshold_U0_appearances_ce0),
    .appearances_q0(combined_appearances_t_q0),
    .appearances_address1(count_threshold_U0_appearances_address1),
    .appearances_ce1(count_threshold_U0_appearances_ce1),
    .appearances_q1(combined_appearances_t_q1),
    .out_r(count_threshold_U0_out_r),
    .out_r_ap_vld(count_threshold_U0_out_r_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_input0 <= 1'b0;
    end else begin
        if (((split_U0_ap_done & split_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_input0 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_input0 <= ap_sync_channel_write_input0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_input1 <= 1'b0;
    end else begin
        if (((split_U0_ap_done & split_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_input1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_input1 <= ap_sync_channel_write_input1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_input2 <= 1'b0;
    end else begin
        if (((split_U0_ap_done & split_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_input2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_input2 <= ap_sync_channel_write_input2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_input3 <= 1'b0;
    end else begin
        if (((split_U0_ap_done & split_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_input3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_input3 <= ap_sync_channel_write_input3;
        end
    end
end

assign ap_channel_done_input0 = (split_U0_ap_done & (ap_sync_reg_channel_write_input0 ^ 1'b1));

assign ap_channel_done_input1 = (split_U0_ap_done & (ap_sync_reg_channel_write_input1 ^ 1'b1));

assign ap_channel_done_input2 = (split_U0_ap_done & (ap_sync_reg_channel_write_input2 ^ 1'b1));

assign ap_channel_done_input3 = (split_U0_ap_done & (ap_sync_reg_channel_write_input3 ^ 1'b1));

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_channel_write_input0 = ((split_U0_output0_full_n & ap_channel_done_input0) | ap_sync_reg_channel_write_input0);

assign ap_sync_channel_write_input1 = ((split_U0_output1_full_n & ap_channel_done_input1) | ap_sync_reg_channel_write_input1);

assign ap_sync_channel_write_input2 = ((split_U0_output2_full_n & ap_channel_done_input2) | ap_sync_reg_channel_write_input2);

assign ap_sync_channel_write_input3 = ((split_U0_output3_full_n & ap_channel_done_input3) | ap_sync_reg_channel_write_input3);

assign count_appearances_1_U0_ap_continue = appearances0_i_full_n;

assign count_appearances_1_U0_ap_start = input0_t_empty_n;

assign count_appearances_2_U0_ap_continue = appearances1_i_full_n;

assign count_appearances_2_U0_ap_start = input1_t_empty_n;

assign count_appearances_3_U0_ap_continue = appearances2_i_full_n;

assign count_appearances_3_U0_ap_start = input2_t_empty_n;

assign count_appearances_U0_ap_continue = appearances3_i_full_n;

assign count_appearances_U0_ap_start = input3_t_empty_n;

assign count_threshold_U0_ap_continue = 1'b1;

assign count_threshold_U0_ap_start = combined_appearances_t_empty_n;

assign gmem_RID = 1'd0;

assign gmem_RLAST = 1'b0;

assign gmem_RRESP = 2'd0;

assign gmem_RUSER = 1'd0;

assign reduce_appearances_U0_ap_continue = combined_appearances_i_full_n;

assign reduce_appearances_U0_ap_start = (appearances3_t_empty_n & appearances2_t_empty_n & appearances1_t_empty_n & appearances0_t_empty_n);

assign split_U0_ap_continue = (ap_sync_channel_write_input3 & ap_sync_channel_write_input2 & ap_sync_channel_write_input1 & ap_sync_channel_write_input0);

assign split_U0_ap_start = 1'b1;

assign split_U0_output0_full_n = input0_i_full_n;

assign split_U0_output1_full_n = input1_i_full_n;

assign split_U0_output2_full_n = input2_i_full_n;

assign split_U0_output3_full_n = input3_i_full_n;


reg find_df_deadlock = 0;
// synthesis translate_off
`include "byte_count_hls_deadlock_detector.vh"
// synthesis translate_on

endmodule //byte_count

